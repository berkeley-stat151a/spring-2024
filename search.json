[
  {
    "objectID": "lectures/Lecture5.html",
    "href": "lectures/Lecture5.html",
    "title": "Simple regression: a quick review.",
    "section": "",
    "text": "Some \\(\\LaTeX\\) needs to go here for Quarto’s own crazy reasons."
  },
  {
    "objectID": "lectures/Lecture5.html#nonparameteric-lines",
    "href": "lectures/Lecture5.html#nonparameteric-lines",
    "title": "Simple regression: a quick review.",
    "section": "Nonparameteric lines",
    "text": "Nonparameteric lines\nFor only one variable, regression is actually no a very good solution. We would actually probably use something more “nonparametric.” For example, we could bucket up the regressors and keep an average in each bucket.\n\nnum_buckets &lt;- 20\nspotify_bucketed_df &lt;- spotify_df %&gt;%\n  mutate(danceability_bucket=cut(danceability, num_buckets)) %&gt;%\n  group_by(danceability_bucket) %&gt;%\n  summarise(mean_popularity=mean(track_popularity),\n            bucket_danceability=median(danceability),\n            count=n())\n\nPlotBaseSpotify() +\n  geom_line(aes(y=y_on_x$fitted.values, color=\"Y ~ X least squares\")) +\n  geom_line(aes(x=bucket_danceability, \n                y=mean_popularity,\n                color=\"Averages in buckets\"),\n            data=spotify_bucketed_df)\n\nWhat do you think of this line’s behavior for low danceability?\nNote that cut takes evenly spaced slices, which leads to a very uneven distribution of observations in each bucket. How do you think this affects the graph we saw before?\n\nggplot(spotify_bucketed_df) +\n  geom_line(aes(x=bucket_danceability, y=count))\n\nThere are more sophisitcated ways to do “nonparametric” smoothers like this automatically, including built-in functions in R.\n\nPlotBaseSpotify() +\n  geom_line(aes(y=y_on_x$fitted.values, color=\"Y ~ X least squares\")) +\n  geom_smooth(aes(color=\"Ggplot smooth\"))\n\nThe core problem with nonparametrics is the curse of dimensionality. Suppose we have \\(P\\) regressors, and we divide each into ten buckets. In total, we have \\(10^P\\) buckets, and, on average, \\(N / 10^P\\) observations per bucket. Here are some values for the Spotify dataset:\n\nregressors &lt;- c(\"danceability\", \"energy\", \"loudness\", \"speechiness\", \n                 \"acousticness\", \"instrumentalness\", \"liveness\")\nstopifnot(all(regressors %in% names(spotify_df)))\n\nfor (p in 1:length(regressors)) {\n  num_buckets = 10^p\n  cat(sprintf(\"With %d buckets, we have %0.3f observations per bucket.\",\n              p, nrow(spotify_df) / num_buckets), \"\\n\")\n}\n\nSo the strength of regression for EDA is really in higher-dimensional settings. For example, if we wanted to look at all the outputs at once:\n\nlm_formula &lt;-\n  paste0(\"track_popularity ~ 1 + \",\n         paste(regressors, collapse=\" + \"))\nprint(lm_formula)\n\nspotify_reg_all &lt;- lm(formula(lm_formula), spotify_df)\n\nprint(summary(y_on_x))\nprint(summary(spotify_reg_all))\n\nNote that the high dimensional fit can look a bit chaotic when projected onto one dimension:\n\nPlotBaseSpotify() +\n  geom_line(aes(y=spotify_reg_all$fitted.values, \n                color=\"Y ~ X high dimensional least squares \")) +\n    geom_line(aes(y=y_on_x$fitted.values, \n                color=\"Y ~ X simple least squares\"))"
  },
  {
    "objectID": "lectures/Lecture2.html",
    "href": "lectures/Lecture2.html",
    "title": "Simple regression: a quick review.",
    "section": "",
    "text": "Some \\(\\LaTeX\\) needs to go here for Quarto’s own crazy reasons."
  },
  {
    "objectID": "lectures/Lecture2.html#alternative-derivation",
    "href": "lectures/Lecture2.html#alternative-derivation",
    "title": "Simple regression: a quick review.",
    "section": "Alternative derivation",
    "text": "Alternative derivation\nAlternatively, our criterion can be written in matrix form as\n\\[\n\\begin{pmatrix}\n1  & \\overline{x} \\\\\n\\overline{x} & \\overline{xx}\n\\end{pmatrix}\n\\begin{pmatrix}\n\\bhat_0 \\\\\n\\bhat_1\n\\end{pmatrix} =\n\\begin{pmatrix}\n\\overline{y} \\\\\n\\overline{xy}\n\\end{pmatrix}\n\\]\nUsing the 2D matrix inversion formula, we see that, if \\(\\overline{xx} - \\overline{x}^2 \\ne 0\\),\n\\[\n\\begin{pmatrix}\n\\bhat_0 \\\\\n\\bhat_1\n\\end{pmatrix} =\n\\frac{1}{\\overline{xx} - \\overline{x}^2}\n\\begin{pmatrix}\n\\overline{xx}  & - \\overline{x} \\\\\n-\\overline{x} & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n\\overline{y} \\\\\n\\overline{xy}\n\\end{pmatrix}\n\\]\nFrom this we can read off the familiar answer\n\\[\n\\begin{align*}\n\\bhat_1 ={}& \\frac{\\overline{xy} - \\overline{x}\\,\\overline{y}}{\\overline{xx} - \\overline{x}^2}\\\\\n\\bhat_0 ={}& \\frac{\\overline{xx}\\,\\overline{y} - \\overline{xy}\\,\\overline{x}}{\\overline{xx} - \\overline{x}^2}\\\\\n  ={}& \\frac{\\overline{xx}\\,\\overline{y} -\n      \\overline{x}^2 \\overline{y} + \\overline{x}^2 \\overline{y} - \\overline{xy}\\,\\overline{x}}\n    {\\overline{xx} - \\overline{x}^2}\\\\\n  ={}& \\overline{y} - \\frac{\\overline{x}^2 \\overline{y} - \\overline{xy}\\,\\overline{x}}\n    {\\overline{xx} - \\overline{x}^2} \\\\\n  ={}& \\overline{y} - \\bhat_1 \\overline{x}.\n\\end{align*}\n\\]\nThis derivation was a bit tedious, and we’ll explore more general ways to think about these formulas in the coming lectures, as well as how to think more carefully about when this is the only solution. For now, it’s important to note that an explicit expression exists.\nFor the rest of the lecture let’s think about some other ways to solve the problem of fitting a line through data in a way that will shed some light on the strenghts and weakness of least squares."
  },
  {
    "objectID": "lectures/Lecture2.html#nonparameteric-lines",
    "href": "lectures/Lecture2.html#nonparameteric-lines",
    "title": "Simple regression: a quick review.",
    "section": "Nonparameteric lines",
    "text": "Nonparameteric lines\nFor only one variable, regression is actually no a very good solution. We would actually probably use something more “nonparametric.” For example, we could bucket up the regressors and keep an average in each bucket.\n\nnum_buckets &lt;- 20\nspotify_bucketed_df &lt;- spotify_df %&gt;%\n  mutate(danceability_bucket=cut(danceability, num_buckets)) %&gt;%\n  group_by(danceability_bucket) %&gt;%\n  summarise(mean_popularity=mean(track_popularity),\n            bucket_danceability=median(danceability),\n            count=n())\n\nPlotBaseSpotify() +\n  geom_line(aes(y=y_on_x$fitted.values, color=\"Y ~ X least squares\")) +\n  geom_line(aes(x=bucket_danceability, \n                y=mean_popularity,\n                color=\"Averages in buckets\"),\n            data=spotify_bucketed_df)\n\n\n\n\nWhat do you think of this line’s behavior for low danceability?\nNote that cut takes evenly spaced slices, which leads to a very uneven distribution of observations in each bucket. How do you think this affects the graph we saw before?\n\nggplot(spotify_bucketed_df) +\n  geom_line(aes(x=bucket_danceability, y=count))\n\n\n\n\nThere are more sophisitcated ways to do “nonparametric” smoothers like this automatically, including built-in functions in R.\n\nPlotBaseSpotify() +\n  geom_line(aes(y=y_on_x$fitted.values, color=\"Y ~ X least squares\")) +\n  geom_smooth(aes(color=\"Ggplot smooth\"))\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\nThe core problem with nonparametrics is the curse of dimensionality. Suppose we have \\(P\\) regressors, and we divide each into ten buckets. In total, we have \\(10^P\\) buckets, and, on average, \\(N / 10^P\\) observations per bucket. Here are some values for the Spotify dataset:\n\nregressors &lt;- c(\"danceability\", \"energy\", \"loudness\", \"speechiness\", \n                 \"acousticness\", \"instrumentalness\", \"liveness\")\nstopifnot(all(regressors %in% names(spotify_df)))\n\nfor (p in 1:length(regressors)) {\n  num_buckets = 10^p\n  cat(sprintf(\"With %d buckets, we have %0.3f observations per bucket.\",\n              p, nrow(spotify_df) / num_buckets), \"\\n\")\n}\n\nWith 1 buckets, we have 3283.300 observations per bucket. \nWith 2 buckets, we have 328.330 observations per bucket. \nWith 3 buckets, we have 32.833 observations per bucket. \nWith 4 buckets, we have 3.283 observations per bucket. \nWith 5 buckets, we have 0.328 observations per bucket. \nWith 6 buckets, we have 0.033 observations per bucket. \nWith 7 buckets, we have 0.003 observations per bucket. \n\n\nSo the strength of regression for EDA is really in higher-dimensional settings. For example, if we wanted to look at all the outputs at once:\n\nlm_formula &lt;-\n  paste0(\"track_popularity ~ 1 + \",\n         paste(regressors, collapse=\" + \"))\nprint(lm_formula)\n\nspotify_reg_all &lt;- lm(formula(lm_formula), spotify_df)\n\nprint(summary(y_on_x))\nprint(summary(spotify_reg_all))\n\n[1] \"track_popularity ~ 1 + danceability + energy + loudness + speechiness + acousticness + instrumentalness + liveness\"\n\nCall:\nlm(formula = track_popularity ~ danceability, data = spotify_df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-46.024 -18.415   2.934  19.480  57.105 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   35.1757     0.6361   55.30   &lt;2e-16 ***\ndanceability  11.1497     0.9484   11.76   &lt;2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 24.93 on 32831 degrees of freedom\nMultiple R-squared:  0.004192,  Adjusted R-squared:  0.004162 \nF-statistic: 138.2 on 1 and 32831 DF,  p-value: &lt; 2.2e-16\n\n\nCall:\nlm(formula = formula(lm_formula), data = spotify_df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-62.259 -17.640   3.169  19.037  73.063 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       70.78317    1.40436  50.402  &lt; 2e-16 ***\ndanceability       7.26292    0.95757   7.585 3.42e-14 ***\nenergy           -28.96580    1.15306 -25.121  &lt; 2e-16 ***\nloudness           1.66617    0.06295  26.469  &lt; 2e-16 ***\nspeechiness       -5.21887    1.35498  -3.852 0.000118 ***\nacousticness       4.86004    0.72643   6.690 2.26e-11 ***\ninstrumentalness -12.82676    0.61686 -20.794  &lt; 2e-16 ***\nliveness          -4.39948    0.88735  -4.958 7.16e-07 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 24.23 on 32825 degrees of freedom\nMultiple R-squared:  0.05934,   Adjusted R-squared:  0.05914 \nF-statistic: 295.8 on 7 and 32825 DF,  p-value: &lt; 2.2e-16\n\n\n\nNote that the high dimensional fit can look a bit chaotic when projected onto one dimension:\n\nPlotBaseSpotify() +\n  geom_line(aes(y=spotify_reg_all$fitted.values, \n                color=\"Y ~ X high dimensional least squares \")) +\n    geom_line(aes(y=y_on_x$fitted.values, \n                color=\"Y ~ X simple least squares\"))"
  },
  {
    "objectID": "lectures/Lecture10_code.html",
    "href": "lectures/Lecture10_code.html",
    "title": "Investigating the law of large numbers by simulation",
    "section": "",
    "text": "In this exercise / lecture, we’ll be simulating data to observe the law of large numbers (LLN) in action. We’ll proceed by:\nAlong the way, we’ll be particularly interested in ways the LLN — and results which rely on it — break down."
  },
  {
    "objectID": "lectures/Lecture10_code.html#some-vector-lln-questions",
    "href": "lectures/Lecture10_code.html#some-vector-lln-questions",
    "title": "Investigating the law of large numbers by simulation",
    "section": "Some vector LLN questions:",
    "text": "Some vector LLN questions:\n\nHow does the covariance matrix affect convergence? Try:\n\nHighly correlated observations\nA nearly singular matrix\n\nHow do transformations affect convergence? Some to try: inverse, eigenvalues, sum of squares of entries, eigenvectors.\nCan you find a covariance matrix for which the LLN does very badly with the inverse?"
  },
  {
    "objectID": "lectures/Lecture9.html",
    "href": "lectures/Lecture9.html",
    "title": "Estimating prediction uncertainty: prediction error variance",
    "section": "",
    "text": "\\(\\LaTeX\\)"
  },
  {
    "objectID": "lectures/Lecture9.html#prediction-error-with-the-gaussian-assumption",
    "href": "lectures/Lecture9.html#prediction-error-with-the-gaussian-assumption",
    "title": "Estimating prediction uncertainty: prediction error variance",
    "section": "Prediction error with the Gaussian assumption",
    "text": "Prediction error with the Gaussian assumption\nUnder our Gaussian assumption with fixed regressors we can write\n\\[\n\\begin{aligned}\n\\y_\\new ={}& \\xv_\\new^\\trans \\betav + \\res_\\new\\\\\n\\yhat_\\new ={}& \\xv_\\new^\\trans \\betavhat \\Rightarrow \\\\\n\\y_\\new - \\yhat_\\new ={}& \\xv_\\new^\\trans (\\betav - \\betavhat) + \\res_\\new.\n\\end{aligned}\n\\]\nFrom this we can see that the error \\(\\y_\\new - \\yhat_\\new\\) is normally distributed. In particular, if we condition on (fix) the training data, and so fix \\(\\betavhat\\), then\n\\[\n\\y_\\new - \\yhat_\\new | \\X, \\Y \\sim \\gauss{\\xv_\\new^\\trans (\\betav - \\betavhat), \\sigma^2}.\n\\]\nUnfortunately we do not know \\(\\betav\\) nor \\(\\res_\\new\\). In fact, we don’t even know \\(\\sigma^2\\), the variance of \\(\\res_\\new\\).\nHowever, under our assumptions, we can show that \\(\\betavhat \\rightarrow \\beta\\). That will mean that \\(\\xv_\\new^\\trans (\\betav - \\betavhat) \\approx 0\\) for large \\(N\\). Even more, this fact will allow us to form an estimate of \\(\\sigma\\) which is accurate for large \\(N\\).\nWe’ll prove \\(\\betavhat \\rightarrow \\beta\\) a few different ways. In each case, the key will be to use the formula\n\\[\n\\betahat = (\\X^\\trans \\X)^{-1} \\X^\\trans \\Y,\n\\]\ntogether with\n\\[\n\\Y = \\X \\beta + \\resv,\n\\]\nwhere the Gaussian assumption means that\n\\[\n\\resv \\sim \\gauss{\\zerov, \\sigma^2 \\id{}_N},\n\\]\nwhich is an \\(N\\)–dimensional Gaussian random vector. Note that this is equivalent to\n\\[\n\\Y \\sim \\gauss{\\X\\beta, \\sigma^2 \\id{}_N}.\n\\]"
  },
  {
    "objectID": "lectures/Lecture9.html#method-1-for-regressor-consistency-use-normality",
    "href": "lectures/Lecture9.html#method-1-for-regressor-consistency-use-normality",
    "title": "Estimating prediction uncertainty: prediction error variance",
    "section": "Method 1 for regressor consistency: Use normality",
    "text": "Method 1 for regressor consistency: Use normality\nPlugging in, we get \\[\n\\betahat = (\\X^\\trans \\X)^{-1} \\X^\\trans \\Y =\n(\\X^\\trans \\X)^{-1} \\X^\\trans (\\X \\beta + \\resv) =\n\\beta + (\\X^\\trans \\X)^{-1} \\X^\\trans \\resv.\n\\]\nIn this expression, only \\(\\resv\\) is random! In fact, since \\(\\resv\\) is Gaussian, and \\(\\betahat\\) is an affine transformation of \\(\\resv\\), then \\(\\betahat\\) itself is Gaussian — albeit with an unknown mean and variance. Noting that\n\\[\n\\begin{aligned}\n\\expect{\\betahat} ={}& \\beta + (\\X^\\trans \\X)^{-1} \\X^\\trans \\expect{\\resv} = \\beta \\\\\n\\cov{\\betahat} ={}& \\expect{(\\betahat - \\beta) (\\betahat - \\beta)^\\trans}\n\\\\ ={}& \\expect{(\\X^\\trans \\X)^{-1} \\X^\\trans \\resv \\resv^\\trans \\X (\\X^\\trans \\X)^{-1} }\n\\\\ ={}& (\\X^\\trans \\X)^{-1} \\X^\\trans \\expect{\\resv \\resv^\\trans} \\X (\\X^\\trans \\X)^{-1}\n\\\\ ={}& (\\X^\\trans \\X)^{-1} \\X^\\trans \\sigma^2 \\id{} \\X (\\X^\\trans \\X)^{-1}\n\\\\ ={}& \\sigma^2 (\\X^\\trans \\X)^{-1} \\X^\\trans \\X (\\X^\\trans \\X)^{-1}\n\\\\ ={}& \\sigma^2 (\\X^\\trans \\X)^{-1},\n\\end{aligned}\n\\]\nwe get the beautiful expression \\[\n\\betahat \\sim \\gauss{\\beta, \\sigma^2 (\\X^\\trans \\X)^{-1}}.\n\\]\nNow, \\(\\X\\) is not random, but \\(\\X^\\trans \\X = \\sumn \\xv_n \\xv_n^\\trans\\), so it’s reasonable to assume by analogy with the LLN that:\n\n\n\n\n\n\nNicely behaved fixed regressors assumption\n\n\n\nAssume that the deterministic sequence \\(\\xv_n\\) satisfies \\[\n\\lim_{N\\rightarrow\\infty} \\frac{1}{N} \\X^\\trans \\X =\n\\lim_{N\\rightarrow\\infty} \\meann \\xv_n \\xv_n^\\trans \\rightarrow \\Sigmam_\\X,\n\\] where \\(\\Sigmam_\\X\\) is positive definite.\n\n\n\n\n\n\n\n\nExercise\n\n\n\nHow would the OLS solution behave if the previous assumption were violated? Note that there are two parts — positive definiteness of the limit, and existence of the limit when scaling \\(\\X^\\trans \\X\\) by \\(1/N\\).\n\n\nWith “nicely behaved regressors” we thus get that\n\\[\n\\betahat \\sim \\gauss{\\beta, \\frac{1}{N} \\sigma^2 \\left(\\frac{1}{N} \\X^\\trans \\X \\right)^{-1}}\n\\approx \\gauss{\\beta, \\frac{1}{N} \\sigma^2 \\Sigmam_\\X^{-1}}.\n\\]\nIt follows that the variance of \\(\\betahat\\) goes to zero as \\(N \\rightarrow \\infty\\), and so it concentrates at its mean, \\(\\beta\\)."
  },
  {
    "objectID": "lectures/Lecture9.html#method-2-for-regressor-consistency-use-the-lln",
    "href": "lectures/Lecture9.html#method-2-for-regressor-consistency-use-the-lln",
    "title": "Estimating prediction uncertainty: prediction error variance",
    "section": "Method 2 for regressor consistency: Use the LLN",
    "text": "Method 2 for regressor consistency: Use the LLN\nThe previous proof really relied on Normality. However, we can get a similar result using only the LLN. Write:\n\\[\n\\begin{aligned}\n\\betahat - \\beta ={}&  \n  \\left(\\X^\\trans \\X\\right)^{-1} \\X^\\trans \\resv\n\\\\={}&\n  \\left(\\frac{1}{N} \\X^\\trans \\X\\right)^{-1} \\frac{1}{N} \\X^\\trans \\resv.\n\\end{aligned}\n\\]\nWe’ve already assumed that\n\\[\n\\left(\\frac{1}{N} \\X^\\trans \\X \\right)^{-1} \\rightarrow \\Sigmam_\\X^{-1}.\n\\]\nWhat about the second term? This is something to which we can apply the vector LLN. If we write \\(\\zv_n := \\xv_n \\res_n\\), then \\(\\expect{\\zv_n} = \\zerov\\) and\n\\(\\cov{\\zv_n} = \\sigma^2 \\xv_n \\xv_n^\\trans\\). If we assume that \\(\\xv_n \\xv_n^\\trans\\) is bounded for all \\(n\\), then we can apply our LLN to get\n\\[\n\\frac{1}{N} \\X^\\trans \\resv = \\meann \\xv_n \\resv_n \\rightarrow \\expect{\\xv_1 \\resv_1} = \\xv_1  \\expect{\\resv_1} = \\zerov.\n\\]\nFrom this it follows that\n\\[\n\\betahat \\rightarrow \\beta \\quad\\textrm{as }N \\rightarrow \\infty\n\\]\nby the LLN alone.\n\n\n\n\n\n\nExercise\n\n\n\nIn fact, we do not require \\(\\xv_n \\xv_n^\\trans\\) is bounded for all \\(n\\) — all we really need is \\(\\max_{n\\in\\{1, \\ldots, N\\},p} \\frac{1}{N} \\xv_{np}^2 \\rightarrow 0\\) as \\(N \\rightarrow \\infty\\). Refer back to our proof of the LLN and show that (a) this condition suffices for the LLN and (b) that it is implied by our “nice regressor” assumption."
  },
  {
    "objectID": "lectures/Lecture9.html#method-3-for-regressor-consistency-plug-into-the-general-formula",
    "href": "lectures/Lecture9.html#method-3-for-regressor-consistency-plug-into-the-general-formula",
    "title": "Estimating prediction uncertainty: prediction error variance",
    "section": "Method 3 for regressor consistency: Plug into the general formula",
    "text": "Method 3 for regressor consistency: Plug into the general formula\nAt the beginning, we derived the (initially disappointing) general formula\n\\[\n\\betahat \\rightarrow \\Xcov^{-1} \\expect{\\xv_1 \\y_1}.\n\\]\nIf we revert to letting \\(\\xv_n\\) be random, then we can simply plug in to get\n\\[\n\\begin{aligned}\n\\betahat \\rightarrow{}& \\Xcov^{-1} \\expect{\\xv_1 (\\xv_1^\\trans \\beta + \\res_1)}\n\\\\={}& \\Xcov^{-1} \\expect{\\xv_1 \\xv_1^\\trans} \\beta + \\Xcov^{-1} \\expect{\\xv_1 \\res_1}\n\\\\={}& \\Xcov^{-1} \\Xcov \\beta + \\Xcov^{-1} \\expect{\\xv_1 \\expect{\\res_1 | \\xv_1}}\n\\\\={}& \\beta + \\Xcov^{-1} \\expect{\\xv_1 0}\n\\\\={}& \\beta.\n\\end{aligned}\n\\]\nThough superficially different, all three of these methods relied on the same facts behind the scenes — namely, that \\(\\expect{\\betahat} = \\beta\\), and \\(\\cov{\\betahat} \\rightarrow \\zerov\\) as \\(N \\rightarrow \\infty\\)."
  },
  {
    "objectID": "lectures/Lecture7.html",
    "href": "lectures/Lecture7.html",
    "title": "Asymptotics and probability with vectors and matrices. The multivariate normal distribution.",
    "section": "",
    "text": "\\(\\LaTeX\\)"
  },
  {
    "objectID": "lectures/Lecture7.html#limit-theorems",
    "href": "lectures/Lecture7.html#limit-theorems",
    "title": "Asymptotics and probability with vectors and matrices. The multivariate normal distribution.",
    "section": "Limit theorems",
    "text": "Limit theorems\nThere are two important limit theorems that we will use: laws of large numbers (LLN) and central limit theorems (CLT). In this class I will not worry too much about getting the strongest possible results (e.g., weakest possible assumptions for a particular convergence guarantee). So I’ll choose conditions that are simple to work with.\n\nLLN\nFirst, let’s state and prove a LLN. Suppose \\(\\RV{\\x}_n\\) are independent random variables for \\(n =1, \\ldots, \\infty\\) such that \\(\\max_n \\var{\\RV{\\x}_n} &lt; \\infty\\). That is, every variance is finite and the variances do not diverge.\n\n\n\n\n\n\nNote to future instructors\n\n\n\nActually, all we need is \\(\\lim_{N\\rightarrow\\infty} \\max_{n=1,\\ldots,N} \\frac{1}{N} \\var{\\RV{\\x}_n} = 0\\), which is more convenient when we actually use this for the fixed regressor setting, but which complicates the exhibition here.\n\n\nWrite \\(\\expect{\\RV{\\x}_n} = \\mu_n\\) and assume that \\(\\meann \\mu_n \\rightarrow \\overline{\\mu} &lt; \\infty\\). Then consider the random variable \\[\n\\overline{x} := \\frac{1}{N} \\sumn \\RV{\\x}_n.\n\\]\nWe can see that\n\\[\n\\begin{aligned}\n\\expect{\\overline{x}} ={}& \\meann \\mu_n \\\\\n\\var{\\overline{x}} ={}& \\\n  \\expect{\\left(\\overline{x} - \\meann \\mu_n\\right)^2} \\\\\n={}&  \\expect{\\left(\\meann (\\RV{\\x}_n - \\mu_n) \\right)^2} \\\\\n={}&  \\frac{1}{N^2} \\sumn \\expect{(\\RV{\\x}_n - \\mu_n)^2} \\\\\n\\le{}&  \\frac{1}{N^2}  N \\max_n \\var{\\RV{\\x}_n} \\rightarrow 0\n\\quad\\textrm{as }N\\rightarrow \\infty.\n\\end{aligned}\n\\]\nA random variable with zero variance is just a constant, so we have shown that \\(\\overline{x}\\) converges to the constant \\(\\overline{\\mu}\\), which is the limit of \\(\\meann \\mu_n\\). (Markov’s theorem gives a formal proof of convergence in probability, but I think that’s beyond the scope of this class.) \\[\n\\overline{x} \\rightarrow \\overline{\\mu} \\quad\n\\textrm{ as }N\\rightarrow \\infty.\n\\]\nNote that in the preceding statement, \\(\\overline{x}\\) is a random variable, but \\(\\overline{\\mu}\\) is a constant.\nIf \\(\\mu_n = \\mu = \\overline{\\mu}\\), then this gives the familiar LLN from introductory probability, but this more general form will be useful in regression.\n\n\nCLT\nThe normal distribution is special because it is the limit of a rescaled average. Take the setting of the previous example, and recall that, as \\(N \\rightarrow \\infty\\),\n\\[\n\\overline{x} - \\overline{\\mu} = \\meann (\\RV{\\x}_n - \\mu_n) \\rightarrow 0.\n\\]\nOne might note that, by the same argument of the previous section,\n\\[\n\\var{N (\\overline{x} - \\overline{\\mu})} \\rightarrow \\infty.\n\\]\nThat is, if you scale \\(\\overline{x} - \\overline{\\mu}\\) by \\(N\\), for large \\(N\\), you get a random variable that takes arbitrarily large values with nonzero probability. However,\n\\[\n\\begin{aligned}\n\\var{\\sqrt{N} \\overline{x}} ={}& \\\n  \\expect{\\left(\\sqrt{N} \\overline{x} - \\sqrt{N} \\meann \\mu_n\\right)^2} \\\\\n={}&  \\expect{\\left(\\sqrt{N} \\meann (\\RV{\\x}_n - \\mu_n) \\right)^2} \\\\\n={}&  \\frac{1}{N} \\sumn \\expect{(\\RV{\\x}_n - \\mu_n)^2} \\\\\n={}&  \\meann \\var{\\RV{\\x}_n},\n\\end{aligned}\n\\]\na quantity that might reasonably converge to a constant, giving \\(\\sqrt{N} (\\overline{x} - \\overline{\\mu})\\) converging to a nondegenerate, but also nondivergent, random variable, as long as \\[\n\\meann \\var{\\RV{\\x}_n} \\rightarrow \\overline{v}.\n\\]\n(Note that the limit must be finite by assumption, but we do need to additionally assume that the limit exists.)\nIn fact, the CLT says something stronger. Not only does \\(\\sqrt{N} (\\overline{x} - \\overline{\\mu})\\) converge to a nicely behaved random variable, but the variable it converges to is normally distributed:\n\\[\n\\sqrt{N} (\\overline{x} - \\overline{\\mu}) =\n\\frac{1}{\\sqrt{N}} \\sumn (\\RV{\\x}_n - \\mu_n) \\rightarrow \\RV{\\z}\n\\quad\\textrm{where }\\RV{\\z} \\sim \\gauss{0, \\overline{v}}.\n\\]\nI won’t prove this here, but you can find lots of references that do prove it. As above, taking \\(\\mu_n = \\mu = \\overline{\\mu}\\) and \\(\\var{\\RV{\\x}_n} = \\overline{v}\\) gives the familiar IID result."
  },
  {
    "objectID": "lectures/Lecture4.html",
    "href": "lectures/Lecture4.html",
    "title": "Least squares as a projection.",
    "section": "",
    "text": "Review / introduce some linear algebra\n\nOrthogonal bases\nEigendecompositions\nMatrix square roots\n\nDerive the OLS estimator from a geometric perspective\n\nDerive the form of projection operators without using vector calculus\nWrite the OLS estimator as a projection operator\nBriefly discuss some consequences of OLS as a projection"
  },
  {
    "objectID": "lectures/Lecture4.html#projection-basis-invariance",
    "href": "lectures/Lecture4.html#projection-basis-invariance",
    "title": "Least squares as a projection.",
    "section": "Projection basis invariance",
    "text": "Projection basis invariance\nSomething suspicious has happened, though — we started with a subspace, and got an answer that depends on the basis we chose. What if we had chosen a different orthonormal basis, \\(\\V\\), which spans \\(\\Sc\\)? Would we have gotten a different answer?\nIt turns out, no. To see this, write each \\(\\uv_p = \\V \\av_p\\) for some \\(\\av_p\\). Stacking the \\(\\av_p\\), we can write \\(\\U = \\V \\A\\).\nWe can then write\n\\[\n\\begin{align*}\n\\V^\\trans \\U ={}& \\V^\\trans \\V \\A = \\A \\\\\n\\U^\\trans \\U ={}& \\id = \\U^\\trans \\V \\A \\Rightarrow \\\\\n\\A^{-1} ={}& \\U^\\trans \\V = \\left(\\V^\\trans \\U \\right)^\\trans = \\A^\\trans.\n\\end{align*}\n\\]\nSo \\(\\A\\) itself is orthonormal. Combining these facts,\n\\[\n\\U \\U^\\trans = \\V \\A \\A^\\trans \\V^\\trans = \\V \\V^\\trans,\n\\]\nand the projection operator does not depend on the orthonormal basis we choose.\nWe can thus safely define the “projection matrix”\n\\[\n\\proj{\\Sc} := \\U \\U^\\trans,\n\\]\nsuch that\n\\[\n\\projop{Sc} \\vv = \\proj{\\Sc} \\vv,\n\\]\nand where \\(\\U\\) is a matrix whose columns are any orthonormal basis of \\(\\Sc\\)."
  },
  {
    "objectID": "lectures/Lecture4.html#some-properties-of-projection-matrices",
    "href": "lectures/Lecture4.html#some-properties-of-projection-matrices",
    "title": "Least squares as a projection.",
    "section": "Some properties of projection matrices",
    "text": "Some properties of projection matrices\nThe projection matrix has some special properties that are worth mentioning.\n\nFirst, if \\(\\vv \\in \\Sc\\), then \\(\\proj{\\Sc}\\vv = \\vv\\) Similarly, \\(\\proj{\\Sc} \\vv = 0\\) is \\(\\vv \\in \\Sc^\\perp\\).\nSecond, \\(\\proj{\\Sc}\\) is symmetric, since \\(\\U \\U^\\trans = (\\U \\U^\\trans)^\\trans\\).\nThird, \\(\\proj{\\Sc}\\) is “idempotent”, meaning \\(\\proj{\\Sc} = \\proj{\\Sc} \\proj{\\Sc}\\).\n\n\n\n\n\n\n\nExercise\n\n\n\nProve these results.\n\n\nThese properties say that \\(\\proj{\\Sc}\\) has a special eigenstructure.\nConsider a square, symmetric matrix \\(\\A\\). The vector \\(\\vv\\) is an eigenvector of \\(\\A\\) with eigenvalue \\(\\lambda\\) if\n\\[\n\\A \\vv = \\lambda \\vv.\n\\]\nThat is, \\(\\A\\) maps \\(\\vv\\) onto a scaled version of itself. The final property constrains the possible values of the eigenvalues of \\(\\proj{\\Sc}\\). Let \\(\\vv\\) and \\(\\lambda\\) denote an eigenvector and eigenvalue of \\(\\proj{\\Sc}\\), then\n\\[\n\\lambda \\vv = \\proj{\\Sc} \\vv =  \\proj{\\Sc} \\ldots \\proj{\\Sc} \\vv = \\lambda^k \\vv.\n\\]\nTherefore we need \\(\\lambda^k = \\lambda\\) for any \\(k\\)! Only two values are possible: \\(\\lambda \\in \\{ 0, 1\\}\\). And we know that, for any basis vectors \\(\\av \\in \\Sc\\) and \\(\\av^\\perp \\in \\Sc^\\perp\\),\n\\[\n\\proj{\\Sc} \\av = \\av \\quad\\textrm{and}\\quad \\proj{\\Sc} \\av^\\perp = 0,\n\\]\nso the eigenvectors are precisely any vectors lying entirely in either \\(\\Sc\\) or \\(\\Sc^\\perp\\).\nFinally, given a projection matrix, we can form the orthogonal projection matrix by simply subtracting from the identity:\n\\[\n\\proj{\\Sc^\\perp} = \\id - \\proj{\\Sc}.\n\\]"
  },
  {
    "objectID": "lectures/Lecture4.html#square-roots-and-inverses-via-eigendecomposition",
    "href": "lectures/Lecture4.html#square-roots-and-inverses-via-eigendecomposition",
    "title": "Least squares as a projection.",
    "section": "Square roots and inverses via eigendecomposition",
    "text": "Square roots and inverses via eigendecomposition\nThe projection matrix was in terms of orthogonal bases. However, we would like it for spaces spanned by a generic, non-orthonormal set of vectors to solve our least squares problem. To bridge the gap, we can construct a linear operator that converts a set of vectors to an orthogonal basis.\nFirst, recall that a square, symmetric \\(P \\times P\\) matrix \\(\\A\\) can always be written in the form\n\\[\n\\begin{align*}\n\\A &= \\U \\Lambda \\U^\\trans\n\\quad\\textrm{where}\\quad \\\\\n\\U^\\trans\\U &= \\id \\textrm{ ($\\U$ is orthogonal) and }\\\\\n\\Lammat &=\n\\begin{pmatrix}\n\\lambda_1 & 0  & \\ldots & 0 \\\\\n0 & \\lambda_2 & 0\\ldots & 0 \\\\\n\\vdots &  & \\ddots & \\vdots \\\\\n0 & 0 & \\ldots 0 & \\lambda_P  \\\\\n\\end{pmatrix}\n\\textrm{ is diagonal.}\n\\end{align*}\n\\]\n\n\n\n\n\n\nExercise\n\n\n\nProve that the columns of \\(\\U\\) are the eigenvectors, and the \\(\\lambda_p\\) are the corresponding eigenvalues.\n\n\nA matrix is called “positive definite” if the eigenvalues are all strictly positive, and positive semi-definite if they are all non-zero.\n\n\n\n\n\n\nExercise\n\n\n\nProve that positive definiteness is equivalent to \\(\\vv^\\trans \\A \\vv &gt; 0\\), and semi-definiteness to \\(\\vv^\\trans \\A \\vv \\ge 0\\).\n\n\n\n\n\n\n\n\nExercise\n\n\n\nProve that if \\(\\A\\) is of the form \\(\\A = \\Q^\\trans \\Q\\) for some \\(\\Q\\), then \\(\\A\\) is positive semi-definite.\n\n\nNote that \\(\\A\\) is invertible if and only if its eigenvalues are non-zero. To see that nonzero eigenvalues are sufficient, we can write \\(\\A^{-1} = \\U \\Lambda^{-1} \\U^\\trans\\).\n\n\n\n\n\n\nExercise\n\n\n\nVerify that \\(\\A^{-1}\\) so defined is an inverse.\n\n\n\n\n\n\n\n\nExercise\n\n\n\nProve that, if some \\(\\lambda_p = 0\\), then \\(\\A\\) is not invertible.\n\n\nFrom the eigendecomposition, one can define the square root of a symmetric positive semit-definite matrix \\(\\A\\): that is, a matrix \\(\\A^{1/2}\\) such that \\((\\A^{1/2})^\\trans \\A^{1/2} = \\A\\). First, define\n\\[\n\\Lammat^{1/2} :=\n\\begin{pmatrix}\n\\sqrt{\\lambda_1} & 0  & \\ldots & 0 \\\\\n0 & \\sqrt{\\lambda_2} & 0\\ldots & 0 \\\\\n\\vdots &  & \\ddots & \\vdots \\\\\n0 & 0 & \\ldots 0 & \\sqrt{\\lambda_P}  \\\\\n\\end{pmatrix}.\n\\]\nThen \\(\\U \\Lammat^{1/2} \\U^\\trans\\) is a square root of \\(\\A\\). Matrix square roots are not unique, but that will not matter — all that matters is that symmetric positive semi-definite matrices always have a square root. However, when I write \\(\\A^{1/2}\\), I will refer to the symmetric square root given in the formula above.\nFurther \\(\\A^{1/2}\\) itself is invertible if and only if \\(\\A\\) is invertible.\n\n\n\n\n\n\nExercise\n\n\n\nProve that \\(\\A^{1/2}\\) so defined is a square root.\n\n\n\n\n\n\n\n\nExercise\n\n\n\nFind a different matrix than the one given above that is also a square root.\n\n\n\n\n\n\n\n\nExercise\n\n\n\nProve that any square root \\(\\A^{1/2}\\) is invertible."
  },
  {
    "objectID": "lectures/Lecture4.html#matrix-square-roots-for-orthonormalization",
    "href": "lectures/Lecture4.html#matrix-square-roots-for-orthonormalization",
    "title": "Least squares as a projection.",
    "section": "Matrix square roots for orthonormalization",
    "text": "Matrix square roots for orthonormalization\nIn our case, recall that we want to find an orthonormal basis of the column span of \\(\\X\\). Let us assume that \\(\\X\\) has full column rank. Observe that\n\n\\(\\X^\\trans \\X\\) is symmetric and positive definite.\n\\(\\Rightarrow\\) We can form the inverse square root \\((\\X^\\trans \\X)^{-1/2}\\).\n\\(\\Rightarrow\\) We can define \\(\\U := \\X (\\X^\\trans \\X)^{-1/2}\\).\n\nThen\n\n\\(\\U\\) is orthonormal and\n\\(\\U\\) has the same column span as \\(\\X\\).\n\nEffectively we have produced an orthonormal basis for \\(\\X\\).\n\n\n\n\n\n\nExercise\n\n\n\nProve that \\(\\U\\) is orthonormal and \\(\\U\\) has the same column span as \\(\\X\\).\n\n\nNote that right multiplying \\(\\X\\) effectively transforms each row of \\(\\X\\) — that is, the regressor \\(\\x_n\\) — into a new regressor \\(\\z_n = (\\X^\\trans \\X)^{-1/2} \\z_n\\) which has an identity covariance matrix.\nUsing our orthonormal basis, we can write the projection matrix as\n\\[\n\\proj{\\Sc_\\X} = \\U \\U^\\trans =\n\\X (\\X^\\trans \\X)^{-1/2} (\\X^\\trans \\X)^{-1/2} \\X^\\trans =\n\\X (\\X^\\trans \\X)^{-1} \\X^\\trans.\n\\]\n\n\n\n\n\n\nExercise\n\n\n\nCheck directly that any vector that can be written in the form \\(\\vv = \\X \\beta\\) satisfies \\(\\vv = \\proj{\\Sc_\\X} \\vv\\), and that any \\(\\vv \\in \\Sc_\\X^\\perp\\) satisfies \\(\\proj{\\Sc_\\X} \\vv = \\zerov\\).\nOne might simply begin with the above formula and verify that it acts as a projection directly. However, doing so may seem mysterious or somehow lucky. Bulding the projection up as we have done shows where it comes from.\n\n\nFinally, we have derived the projection operator onto the span of \\(\\X\\):\n\\[\n\\begin{align*}\n\\proj{\\Sc_\\X} \\Y ={}& \\X (\\X^\\trans \\X)^{-1} \\X^\\trans \\Y\n     ={} \\X \\betahat \\quad\\textrm{where}\\\\\n     \\betahat ={}& (\\X^\\trans \\X)^{-1} \\X^\\trans \\Y.\n\\end{align*}\n\\]\nWe give this fitted vector a special name:\n\\[\n\\Yhat := \\proj{\\Sc_\\X} \\Y = \\X \\betahat.\n\\]\nAdditionally, we have that the fitted residuals are given by\n\\[\n\\resvhat = \\Y - \\X \\betahat = \\id \\Y - \\proj{\\Sc_\\X} \\Y\n  = (\\id - \\proj{\\Sc_\\X})\\Y = \\proj{\\Sc_\\X^\\perp} \\Y.\n\\]\nNote that \\(\\Y = \\Yhat + \\resvhat = (\\proj{\\Sc_\\X} + \\proj{\\Sc_\\X^\\perp}) \\Y\\). Also, our squared error loss is given by \\(\\norm{\\resvhat}_2^2 = \\norm{\\proj{\\Sc_\\X^\\perp} \\Y}_2^2\\), the squared magnitude of the component of \\(\\Y\\) not lying in \\(\\X\\)."
  },
  {
    "objectID": "lectures/Lecture4.html#some-facts-that-follow-from-this",
    "href": "lectures/Lecture4.html#some-facts-that-follow-from-this",
    "title": "Least squares as a projection.",
    "section": "Some facts that follow from this",
    "text": "Some facts that follow from this\nFrom the projection form of least squares, we can immediately see some facts that may not be obvious from the minimization perspective.\n\nThe residuals sum to zero if and only if \\(\\onev \\in \\Sc_\\X\\).\nIt is often thought that the residuals of OLS have zero mean, but this can actually be seen to follow from including a constant term. In particular,\n\\[\n\\meann \\reshat_n = \\frac{1}{N} \\resvhat^\\trans \\onev = \\frac{1}{N} \\proj{\\Sc_\\X^\\perp} \\onev.\n\\]\nAnd \\(\\onev \\in \\Sc_\\X\\) if and only if \\(\\proj{\\Sc_\\X^\\perp} \\onev = 0\\). Of course it suffices to have \\(\\onev\\) as a column of \\(\\X\\), but \\(\\onev \\in \\Sc_\\X\\) whenever any linear combination of regressors is a constant.\nA common example is the one-hot encoding for a class. Suppose each observation \\(n\\) is in exactly one of \\(K\\) groups, and we set \\(\\x_{nk} = 1\\) if observation \\(n\\) is in group \\(k\\), and \\(\\x_{nk} = 0\\) otherwise. Since each observation is in exactly one group, \\(\\sum_{k=1}^K \\x_{nk} = 1\\), and \\(\\onev \\in \\Sc_\\X\\), and \\(\\meann \\res_n = 0\\).\n\n\nInvertible linear transformations leave the fit unchanged\nSuppose someone suggests trying to get a better least squares fit by regression on \\(\\z_n = \\A \\x_n\\) rather than \\(\\x_n\\), where \\(\\A\\) is invertible. Since the columns of \\(\\Z = \\X \\A^\\trans\\) are simply linear combinations of the columns of \\(\\X\\), the column span is the same, and both \\(\\Yhat\\) and \\(\\resvhat\\) are unchanged. (Note that the coefficients will change, however, since we are forming linear combinations of a different basis!)\n\n\nMore regressors can only make the sum of squares smaller\nWhen we include an additional regressor, we can only increase the column span of \\(\\Sc_\\X\\), and so only decrease the squared error \\(\\norm{\\resvhat}_2^2\\).\n(This fact is also easy to see from the optimization perspective, since minimizing over a more expressive class can never increase the optimal error.)"
  },
  {
    "objectID": "lectures/Lecture2_linearity_note.html",
    "href": "lectures/Lecture2_linearity_note.html",
    "title": "Note on linear and affine functions",
    "section": "",
    "text": "This course is called “linear models,” so it’s worth being clear about what makes a function linear. As we will see, in some sense it might be better to call the course “affine models.”\nSuppose we have a function \\(f(\\cdot)\\) from one space to another. For example, the input space can be \\(\\mathbb{R}^2\\) (2-vectors) and the output can be scalars, \\(\\mathbb{R}\\). We’ll write the input space as \\(\\mathbb{I}\\) and the output as \\(\\mathbb{O}\\). We assume that addition and scalar multiplication make sense in both \\(\\mathbb{I}\\) and \\(\\mathbb{O}\\).\nLet \\(\\z\\) and \\(\\z'\\) be inputs in \\(\\mathbb{I}\\), and let \\(\\alpha \\in \\mathbb{R}\\). In some generality, a function \\(f(\\cdot)\\) from one space to another is called linear if it satsfies, for all \\(\\alpha\\), \\(\\z\\), and \\(\\z'\\):\n\\[\nf(cdot)\\textrm{is a linear function if and only if }\\quad\nf(\\alpha \\z) = \\alpha f(\\z)\n\\quad\\textrm{and}\\quad\nf(\\z + \\z') = f(\\z) + f(\\z').\n\\]\nFor example, fix \\(\\beta \\in \\mathbb{R}^2\\), and let \\(f(\\z) = \\beta^\\trans \\z\\). Then \\(\\mathbb{I} = \\mathbb{R}^2\\), \\(\\mathbb{O} = \\mathbb{R}\\). Then \\(f(\\cdot)\\) is a linear function.\nBy this defintion, the regression function \\[\nf(\\z) =  \\beta_0 + \\beta_1 \\z_n + \\res_n\n\\]\nis not linear in \\(\\z_n\\). It’s not even linear if we take \\(\\x = (1, \\z_n)\\) and write \\(\\y_n = g(\\x) = \\beta^\\trans \\x_n + \\res_n\\), because of the residual.\nOf course, in non-formal language, we might describe them as “linear” simply because their graph is a straight line. This is one justification for the class name “linear models”.\nFormally, both \\(f(\\cdot)\\) and \\(g(\\cot)\\) are “affine function,” which means they are linear with an offset.\nFor the purposes of this class, we can define affine functions as:1\n\\[\ng(\\cdot)\n\\textrm{ is an affine function if and only if }\n\\textrm{there exists a }b \\in \\mathbb{O}\n\\textrm{ such that }f(\\cdot) - b\n\\textrm{ is linear.}\n\\]\nGiven this, we can see that the relationship \\(\\y_n = \\beta_0 + \\beta_1 \\z_n + \\res_n\\) is affine as maps from\n\\[\n\\begin{align*}\n\\beta &\\mapsto \\y_n\\\\\n\\z_n &\\mapsto \\y_n\\\\\n\\res_n &\\mapsto \\y_n.\n\\end{align*}\n\\]\nMaybe the course should be called “affine models”!\nA final note: it is likely that the models are called “linear models” because the expectation of \\(\\y_n\\) is, in fact, linear in both the regressors and coefficient, under the assumption that the residuals have mean zero:\n\\[\n\\expect{}{\\y_n} = \\beta^\\trans \\x_n.\n\\]\nHowever, keeping with the spirit of the class, I prefer not to bake such an assumption into the defintion of a linear model, reserving stochastisicity for concrete situations."
  },
  {
    "objectID": "lectures/Lecture2_linearity_note.html#footnotes",
    "href": "lectures/Lecture2_linearity_note.html#footnotes",
    "title": "Note on linear and affine functions",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAs I did in lecture, one could instead write the linear transforms in a way that depends on \\(b\\), which is then asserted to exist. But that is a bit clumsy, and equivalent to the given definition. Wikipedia defines affine transformations in terms of invariance relations, whereas Wolfram appears to limit to \\(\\mathbb{R}^d\\). I’m not sure whether my definition here is official, but I think it strikes a nice balance.↩︎"
  },
  {
    "objectID": "lectures/Lecture1.html",
    "href": "lectures/Lecture1.html",
    "title": "Course outline",
    "section": "",
    "text": "This is a course about linear models. You probably all know what linear models are already — in short, they are models which fit straight lines through data, possibly high-dimensional data. Every setting we consider in this class will have the following attributes:\n\nA bunch of data points. We’ll index with \\(n = 1, \\ldots, N\\).\nEach datapoint consists of:\n\nA scalar-valued “response” \\(y_n\\)\nA vector-valued “regressor” \\(\\xv_n = (\\x_{n1}, \\ldots, \\x_{nP})\\).\n\n\n\n\n\n\n\n\nNotation\n\n\n\nThroughout the course, I will (almost) always use the letter “x” for regressors and the letter “y” for responses. There will always be \\(N\\) datapoints, and the regressors will be \\(P\\) dimensional. Vectors and matrices will be boldface.\nOf course, I may deviate from this (and any) notation convention by saying so explicitly.\n\n\nWe will be interested in what \\(\\xv_n\\) can tell us about \\(\\y_n\\). This setup is called a “regression problem,” and can be attacked with lots of models, including non-linear models. But we will focus on approaches to this problem that operate via fitting straight lines to the dependence of \\(y_n\\) on \\(\\xv_n\\).\nRelative to a lot of other machine learning or statistical procedures, linear models are relatively easy to analyze and understand. Yet they are also complex enough to exhibit a lot of the strengths and pitfalls of all machine learning and statistics. So really, this is only partly a course about linear models per se. I hope to make it a course about concepts in statistics in machine learning more generally, but viewed within the relatively simple framework of linear models. Some examples that I hope to touch on at least briefly include:\n\nAsymptotics under misspecification\nRegularization\nSparsity\nThe bias / variance tradeoff\nThe influence function\nDomain transfer\nDistributed learning\nConformal inference\nPermutation testing\nBayesian methods\nBenign overfitting\n\nOur results and conclusions will be expressed in formal mathematical statements and in software. For the purpose of this class, I view mathematics and coding as analogous to language, grammar, and style: you need to have a command of these things in order to say something. But the content of this course doesn’t stop and math and conding, just as learning language alone does not give you something to say. Linear models will be a mathematical and computational tool for communicating with and about the real world. Datasets can speak to us in the language of linear models, and we can communicate with other humans through the language of linear models. Learning to communicate effectively in this way is the most important content of this course, and is a skill that will remain relevent whether or not you ever interpret or fit another linear model in your life.\nWhether or not a statistical analysis is “good” cannot be evaluated outside a particular context. Why do we care about the conclusions of this analysis? What will they be used for? Who needs to understand our analysis? What are the consequences of certain kinds of errors? Outside of a classroom, you will probably never encounter a linear model without a real question and context attached to it. I will make a real effort in this class to respect this fact, and always present data in context, to the extent possible within a classroom setting. I hope you will in turn get in the habit of always thinking about the context of a problem, even when going through formal homework and lab exercises. For pedagogical reasons we may have to step into abstract territory at times, but I will make an effort to tie what we learn back to reality, and, in grading we’ll make sure to reward your efforts to do so as well. Just as there is not a “correct” essay in an English class, this will often mean that there are not “correct” analyses for a dataset, even though there are certainly better and worse approaches, as well as unambiguous errors."
  },
  {
    "objectID": "lectures/Lecture1.html#exploratory-data-analysis",
    "href": "lectures/Lecture1.html#exploratory-data-analysis",
    "title": "Course outline",
    "section": "Exploratory data analysis",
    "text": "Exploratory data analysis\n\nSpotify example\nEDA is part of every project (start by plotting your data)\nOften a starting point for more detailed analyses\nAnything goes, but correpsondingly the results may not be that meaningful\nHelpful to have a formal understanding of what regression is doing\nLinear algebra perspective"
  },
  {
    "objectID": "lectures/Lecture1.html#prediction-problems",
    "href": "lectures/Lecture1.html#prediction-problems",
    "title": "Course outline",
    "section": "Prediction problems",
    "text": "Prediction problems\n\nBodyfat example\nHave some pairs of responses and explanatory variables\nGiven new explanatory variables, we want a “best guess” for an unseen response\nWe care about how our model fits the data we have, and how it extrapolates\nThe model itself (i.e., the slopes of the fitted line) doesn’t have much meaning\nCare about uncertainty in and calibration of our prediction\nLoss minimization perspective"
  },
  {
    "objectID": "lectures/Lecture1.html#inference-problems",
    "href": "lectures/Lecture1.html#inference-problems",
    "title": "Course outline",
    "section": "Inference problems",
    "text": "Inference problems\n\nAluminum stress-strain curve example\nWe have a question about the world that can’t be expressed as pure prediction\nSometimes we “reify” our model, even if tentatively\nSometimes has a causal intepretation: if we intervene in some aspect of the world, what will happen?\nWe need some notion of the subjective uncertainty of our estimates\nMaximum likelihood perspective\n\nThese perspectives are highly overlapping, and often a problem doesn’t fit neatly into one or the other. For example, good inference should give good predictions, and inference in a very tentatively reified model is close to exploratory data analysis. Still, I’ll lean on this division to help organize the course conceptually.\nWe can look at these examples in Lecture1_examples.ipynb."
  },
  {
    "objectID": "datasets/data.html",
    "href": "datasets/data.html",
    "title": "Datasets",
    "section": "",
    "text": "The following datasets are used in lectures, homework, and labs."
  },
  {
    "objectID": "datasets/data.html#aluminum-dataset",
    "href": "datasets/data.html#aluminum-dataset",
    "title": "Datasets",
    "section": "Aluminum dataset",
    "text": "Aluminum dataset\nDataset containing stress-strain curves for commercially available aluminum samples at varying tempertures. The data accompanies B.S. Aakash, JohnPatrick Connors, Michael D. Shields, Variability in the thermo-mechanical behavior of structural aluminum, Thin-Walled Structures, Volume 144, 2019, 106122, ISSN 0263-8231. (link)\nPaper abstract: The nominal performance of structural aluminum alloys at elevated temperature has been thoroughly investigated in the past. Although it is well known that the performance of a given material specimen will differ from the nominal behavior, the extent of this variability has not been quantitied to date. This limits the ability to perform reliability and performance-based design and analysis for aluminum structures subjected to high temperatures (e.g. in structural fire engineering). This work presents an experimental investigation of the variability in the stress-strain behavior of AA 6061-T651 (as a model ductile aluminum alloy). We performed steady-state tensile tests on nine different batches of nominally identical material sourced from different suppliers/manufacturers at six different temperatures (20 °C, 100 °C, 150 °C, 200 °C, 250 °C, and 300 °C) under two different geometries to induce uniaxial tension and plane strain stress states in the gauge section. The results are investigated statistically to illustrate variability in the salient features of the stress-strain behavior of the material ranging from nonlinear elastic behavior to strain localization and ductile fracture. Some observations on material performance and its variability are made along the way. Overall, it is illustrated that variations between batches of material can be quite large and – especially as it relates to strain localization, necking, and material failure – variations can be very large even within a fixed batch of material. To encourage data of this nature to be expanded and integrated into research and practice to improve structural design and investigations, the full searchable dataset are publicly available with experimental details published concurrently through Data in Brief.\n\nLink to csv\nSource link (downloaded Dec 2023)"
  },
  {
    "objectID": "datasets/data.html#bodyfat-dataset",
    "href": "datasets/data.html#bodyfat-dataset",
    "title": "Datasets",
    "section": "Bodyfat dataset",
    "text": "Bodyfat dataset\nBodyfat and other physical measurements on a number of individuals.\nMeasurement standards are apparently those listed in Benhke and Wilmore (1974), pp. 45-48 where, for instance, the abdomen 2 circumference is measured “laterally, at the level of the iliac crests, and anteriorly, at the umbilicus”.\nThese data are used to produce the predictive equations for lean body weight given in the abstract “Generalized body composition prediction equation for men using simple measurement techniques”, K.W. Penrose, A.G. Nelson, A.G. Fisher, FACSM, Human Performance Research Center, Brigham Young University, Provo, Utah 84602 as listed in Medicine and Science in Sports and Exercise, vol. 17, no. 2, April 1985, p. 189.\n\nLink to csv\nSource link (downloaded Dec 2023)"
  },
  {
    "objectID": "datasets/data.html#spotify-dataset",
    "href": "datasets/data.html#spotify-dataset",
    "title": "Datasets",
    "section": "Spotify dataset",
    "text": "Spotify dataset\nThis dataset consists of roughly 30,000 Songs from the Spotify API with black-box machine learning quantifications of musical features. No guarantees are made on how the tracks were sampled.\n\nLink to csv\nSource link (downloaded Dec 2023)"
  },
  {
    "objectID": "calendar.html",
    "href": "calendar.html",
    "title": "Calendar",
    "section": "",
    "text": "We can just embed the iframe html:"
  },
  {
    "objectID": "assignments/hw3_code.html",
    "href": "assignments/hw3_code.html",
    "title": "STAT151A Code homework 3: Due February 23rd",
    "section": "",
    "text": "$$\n\\newcommand{\\trans}{\\intercal}\n\\newcommand{\\norm}[1]{\\left\\Vert#1\\right\\Vert}\n\\newcommand{\\abs}[1]{\\left|#1\\right|}\n\\newcommand{\\bbr}{\\mathbb{R}}\n\\newcommand{\\bbz}{\\mathbb{Z}}\n\\newcommand{\\bbc}{\\mathbb{C}}\n\\newcommand{\\gauss}[1]{\\mathcal{N}\\left(#1\\right)}\n\n\\newcommand{\\argmin}[1]{\\underset{#1}{\\mathrm{argmin}}\\,}\n\\newcommand{\\projop}[1]{\\underset{#1}{\\mathrm{Proj}}\\,}\n\\newcommand{\\proj}[1]{\\underset{#1}{\\mybold{P}}}\n\\newcommand{\\expect}[1]{\\mathbb{E}\\left[#1\\right]}\n\\newcommand{\\prob}[1]{\\mathbb{P}\\left(#1\\right)}\n\\newcommand{\\dens}[1]{\\mathit{p}\\left(#1\\right)}\n\\newcommand{\\var}[1]{\\mathrm{Var}\\left(#1\\right)}\n\\newcommand{\\cov}[1]{\\mathrm{Cov}\\left(#1\\right)}\n\\newcommand{\\sumn}{\\sum_{n=1}^N}\n\\newcommand{\\meann}{\\frac{1}{N} \\sumn}\n\n\\newcommand{\\trace}[1]{\\mathrm{trace}\\left(#1\\right)}\n\\newcommand{\\diag}[1]{\\mathrm{Diag}\\left(#1\\right)}\n\\newcommand{\\grad}[2]{\\nabla_{#1} \\left. #2 \\right.}\n\\newcommand{\\gradat}[3]{\\nabla_{#1} \\left. #2 \\right|_{#3}}\n\\newcommand{\\fracat}[3]{\\left. \\frac{#1}{#2} \\right|_{#3}}\n\n\\newcommand{\\mybold}[1]{\\boldsymbol{#1}}\n\n\\newcommand{\\W}{\\mybold{W}}\n\\newcommand{\\w}{w}\n\\newcommand{\\wbar}{\\bar{w}}\n\\newcommand{\\wv}{\\mybold{w}}\n\n\\newcommand{\\X}{\\mybold{X}}\n\\newcommand{\\x}{x}\n\\newcommand{\\xbar}{\\bar{x}}\n\\newcommand{\\xv}{\\mybold{x}}\n\\newcommand{\\Xcov}{\\Sigmam_{\\X}}\n\n\\newcommand{\\Z}{\\mybold{Z}}\n\\newcommand{\\z}{z}\n\\newcommand{\\zv}{\\mybold{z}}\n\\newcommand{\\zbar}{\\bar{z}}\n\n\\newcommand{\\Y}{\\mybold{Y}}\n\\newcommand{\\Yhat}{\\hat{\\Y}}\n\\newcommand{\\y}{y}\n\\newcommand{\\yv}{\\mybold{y}}\n\\newcommand{\\yhat}{\\hat{\\y}}\n\\newcommand{\\ybar}{\\bar{y}}\n\n\\newcommand{\\res}{\\varepsilon}\n\\newcommand{\\resv}{\\mybold{\\res}}\n\\newcommand{\\resvhat}{\\hat{\\mybold{\\res}}}\n\\newcommand{\\reshat}{\\hat{\\res}}\n\n\\newcommand{\\betav}{\\mybold{\\beta}}\n\\newcommand{\\betavhat}{\\hat{\\bv}}\n\\newcommand{\\betahat}{\\hat{\\beta}}\n\n\\newcommand{\\bv}{\\mybold{\\beta}}\n\\newcommand{\\bvhat}{\\hat{\\bv}}\n\\newcommand{\\bhat}{\\hat{\\beta}}\n\n\\newcommand{\\alphav}{\\mybold{\\alpha}}\n\\newcommand{\\alphavhat}{\\hat{\\av}}\n\\newcommand{\\alphahat}{\\hat{\\alpha}}\n\n\\newcommand{\\gv}{\\mybold{\\gamma}}\n\\newcommand{\\gvhat}{\\hat{\\gv}}\n\\newcommand{\\ghat}{\\hat{\\gamma}}\n\n\\newcommand{\\hv}{\\mybold{\\h}}\n\\newcommand{\\hvhat}{\\hat{\\hv}}\n\\newcommand{\\hhat}{\\hat{\\h}}\n\n\\newcommand{\\gammav}{\\mybold{\\gamma}}\n\\newcommand{\\gammavhat}{\\hat{\\gammav}}\n\\newcommand{\\gammahat}{\\hat{\\gamma}}\n\n\\newcommand{\\new}{\\mathrm{new}}\n\\newcommand{\\zerov}{\\mybold{0}}\n\\newcommand{\\onev}{\\mybold{1}}\n\\newcommand{\\id}{\\mybold{I}}\n\n\\newcommand{\\sigmahat}{\\hat{\\sigma}}\n\n\n\\newcommand{\\etav}{\\mybold{\\eta}}\n\\newcommand{\\muv}{\\mybold{\\mu}}\n\\newcommand{\\Sigmam}{\\mybold{\\Sigma}}\n\n\\newcommand{\\rdom}[1]{\\mathbb{R}^{#1}}\n\n\\newcommand{\\RV}[1]{\\tilde{#1}}\n\n\n\n\\def\\A{\\mybold{A}}\n\n\\def\\A{\\mybold{A}}\n\\def\\av{\\mybold{a}}\n\\def\\a{a}\n\n\\def\\B{\\mybold{B}}\n\n\n\\def\\S{\\mybold{S}}\n\\def\\sv{\\mybold{s}}\n\\def\\s{s}\n\n\\def\\R{\\mybold{R}}\n\\def\\rv{\\mybold{r}}\n\\def\\r{r}\n\n\\def\\V{\\mybold{V}}\n\\def\\vv{\\mybold{v}}\n\\def\\v{v}\n\n\\def\\U{\\mybold{U}}\n\\def\\uv{\\mybold{u}}\n\\def\\u{u}\n\n\\def\\Sc{\\mathcal{S}}\n\\def\\ev{\\mybold{e}}\n\n\\def\\Lammat{\\mybold{\\Lambda}}\n\n\n$$\n\n\n\nIn this homework problem, we’ll simulate some data and check our predictions for a regression problem of the form \\(\\y_n = \\xv_n^\\trans \\betav + \\res_n\\), where \\(\\res_n \\sim \\gauss{0, \\sigma^2}\\), independetly of \\(\\xv_n\\).\nFor this problem, do not use lm() or other regression functions (except possibly to sanity check that you have done things correctly). You may (and are in fact encouraged) to use your solutions to past homeworks.\n\n1 Implementation\nImplement the following functions:\n# Generate a random covariance matrix.\n#\n# Args:\n#   dim: The dimension of the covariance matrix\n#\n# Returns:\n#   A valid dim x dim covariance matrix\nDrawCovMat &lt;- function(dim) {\n    # ... your code here ...\n}\n# Generate a random matrix of regressors.\n#\n# Args:\n#   n_obs: The number of regression observations\n#   cov_mat: A dim x dim valid covariance matrix\n#\n# Returns:\n#   A n_obs x dim matrix of normally distributed random regressors\n#   where the rows have covariance cov_mat\nSimulateRegressors &lt;- function(n_obs, cov_mat) {\n    # ... your code here ...\n}\n# Generate the response for a linear model.\n#\n# Args:\n#   x_mat: A n_obs x dim matrix of regressors\n#   beta: A dim-length vector of true regression coefficients\n#   sigma: The standard deviation of the residuals\n#\n# Returns:\n#   A n_obs-vector of responses drawn from the regression\n#   model y_n ~ x_n^T \\beta + \\epsilon_n, where \\epsilon_n\n#   is distributed N(0, sigma^2),\nSimulateResponses &lt;- function(x_mat, beta, sigma) {\n    # ... your code here ...\n}\n# Estimate the regression coefficient.\n#\n# Args:\n#   x: A n_obs x dim matrix of regressors\n#   y: A n_obs-length vector of responses\n#\n# Returns:\n#   A dim-length vector estimating the coefficient \n#   for the least squares regression y ~ x.\nGetBetahat &lt;- function(x, y) {\n    # ... your code here ...\n}\n# Estimate the residual standard deviation.\n#\n# Args:\n#   x: A n_obs x dim matrix of regressors\n#   y: A n_obs-length vector of responses\n#\n# Returns:\n#   An estimate of the residual standard deviation \n#   for the least squares regression y ~ x.\nGetSigmahat &lt;- function(x, y) {\n    # ... your code here ...\n}\n\n\n2 Draw and check\nChoose a dimension. Using a large \\(N\\), check that your functions are working correctly.\n\n\n3 Draw a training set and test set\nSimulate a training set \\(\\X\\) and \\(\\Y\\) with \\(N = 1000\\) and \\(P = 3\\), and values of \\(\\beta\\) and \\(\\sigma\\) that you choose. Use the training set to form estimates \\(\\betavhat\\) and \\(\\sigmahat\\). Then, draw a new set of \\(500\\) test data points, \\(\\X_\\new\\) and \\(\\Y_\\new\\).\nUse \\(\\betavhat\\), \\(\\sigmahat\\), and \\(\\X_\\new\\) to form an approximate 80% predictive interval for each response \\(\\Y_\\new\\). Compute what proportion of the time the \\(\\Y_\\new\\) actually lie in the interval. Is your prediction interval performing as expected? Why or why not?\n\n\n4 Vary the setting\nChoose three of the following questions to answer.\nExplore how the coverage of the test set varies when:\n\n\\(N\\) increases or decreases, all else fixed\nThe value of \\(\\sigma\\) increase and decreases, all else fixed\nThe values in \\(\\beta\\) increase and decreases, all else fixed\n\\(P\\) increase and decreases (and \\(\\beta\\) changes with it)\nThe distribution of the residuals changes (i.e., try something other than a normal)\nYou draw new values for the training set (but keep the test set fixed)\nYou draw new values for the test set (but keep the training set fixed)\nPick something else that you find interesting to vary!"
  },
  {
    "objectID": "assignments/hw2_code.html",
    "href": "assignments/hw2_code.html",
    "title": "STAT151A Code homework 2: Due February 9th",
    "section": "",
    "text": "In this homework, you’ll implement some linear algebra ideas in R.\nFor each problem, provide a solution in the form of a function, and then test it using following provided functions:\n# Check whether matrix `x` == `y` for all entries,\n# up to the tolerance `tol`.  If not, an error is raised.\nAssertMatricesEqual &lt;- function(x, y, tol=1e-9) {\n  if (!(all(dim(x) == dim(y)))) {\n    stop(\"The dimensions do not match.\")\n  }\n  err &lt;- max(abs(x - y))\n  if (err &gt; tol) {\n    stop(sprintf(\"The error %f is greater than the tolerance.\", err))\n  }\n}\n\n\n# Generate an `nrow` x `ncol` matrix with random standard normal entries.\nGenerateMatrix &lt;- function(nrow, ncol) {\n  return(rnorm(nrow * ncol) %&gt;% matrix(nrow, ncol))\n}\nFor example,\n# Should fail --- the matrices have the wrong dimension.\nAssertMatricesEqual(GenerateMatrix(3, 3), GenerateMatrix(4, 3))\n\n# Should fail --- the matrices are not equal.\nA &lt;- GenerateMatrix(3, 3)\nAssertMatricesEqual(GenerateMatrix(3, 3), A + 5)\n\n# Should pass\nAssertMatricesEqual(A, A)\n\n(Example) Starting from GenerateMatrix(), write a function that generates a random symmetric matrix.\n\nSolution:\nGenerateSymmetricMatrix &lt;- function(dim) {\n    a_mat &lt;- GenerateMatrix(dim, dim)\n    return(0.5 * (a_mat + t(a_mat)))\n}\n\na_sym &lt;- GenerateSymmetricMatrix(4)\nAssertMatricesEqual(a_sim, t(a_sim))\n\n(Example) Starting from AssertMatricesEqual(), write a function that checks whether a matrix is symmetric.\n\nSolution:\nCheckSymmetricMatrix &lt;- function(a) {\n    AssertMatricesEqual(a, t(a))\n}\n\nStarting from GenerateMatrix(), write a function to generate a random symmetric positive semi-definite matrix of a given size.\nStarting from GenerateMatrix(), write a function to generate a random symmetric positive definite matrix of a given size whose smallest eigenvalue is greater than one. (Hint: you can add something to your previous solution.)\nWrite a function that takes in a symmetric PSD matrix and returns an inverse computed from the eigendecomposition. You may use eigen().\nWrite a function that takes in a symmetric PSD matrix and returns a square root computed from the eigen-decomposition. You may use eigen().\nWrite a function that takes in a symmetric PSD matrix and returns a (possibly non-symmetric) square root computed from the cholesky decomposition. You may use chol().\nWrite a function that takes in a potentially non-square matrix and returns a projection matrix onto the column span. You may assume the matrix is full-rank.\nWrite a function that takes in a potentially non-square matrix and returns a projection matrix onto the row span. You may assume the matrix is full-rank.\nWrite a function that takes in a potentially non-square matrix and returns a projection matrix onto the orthogonal complement of the column span. You may assume the matrix is full-rank.\nWrite a function that takes in a potentially non-square matrix and returns an orthonormal basis for its column span. You may assume the matrix is full-rank.\nWrite a function that takes in a positive definite covariance matrix and returns a draw from the multivariate normal distribution with mean zero and the given covariance matrix. You may use only rnorm(n, mean=0, sd=1) to generate random variables. Verify that you have succeeded using Monte Carlo draws and AssertMatricesEqual() with an appropriate tolerance."
  },
  {
    "objectID": "assignments/hw1_code.html",
    "href": "assignments/hw1_code.html",
    "title": "STAT151A Code homework 1: Due January 26th",
    "section": "",
    "text": "For all questions below, provide answers in complete sentences, and include correct and readable code to support your answers.\n\n1 Spotify dataset\n\n(a)\nFind another variable (other than danceability) that is associated with popularity according to simple linear regression.\n\n\n(b)\nHow does this association change if you remove low-popularity tracks? You may define low-popularity tracks however you like, but briefly defend your choice.\n\n\n(c)\nIdentify a song that defies the relationship you found. (For example, having found a positive relationship between danceability and popularity, I might find a song that is highly popular but not ``danceable.’’)\nListen to the song on Spotify and comment on whether the result makes sense.\n\n\n\n2 Bodyfat dataset\n\n(a)\nChoose two variables (other than bodyfat). Use lm to regress bodyfat on these two variables and an intercept.\n\n\n(b)\nFor the regression in the previous example, construct your own \\(\\boldsymbol{X}\\) and \\(\\boldsymbol{Y}\\) matrices by hand (don’t use the output of lm). Using these, compute your own estimate \\(\\hat{\\beta}\\) and confirm that it matches the output of lm.\n\n\n(c)\nWrite a function in R that computes \\(\\hat{\\beta}\\) from \\(\\boldsymbol{X}\\) and \\(\\boldsymbol{Y}\\). Document the function’s inputs and outputs. As an example, you might follow the Function Documentation section of the Amazon R style guide.\n\n\n\n3 Aluminum dataset\n\n(a)\nRun the regression from Lecture 1 using all three specimens, both with and without an intercept term. Plot the results.\nFor convenience, here is a filter function to limit to the right set of data:\nfilter(Strain &lt; 0.0035, Strain &gt; 0.0001,\n       loading_type == \"T\", temp == 20, lot == \"A\")\nComment on whether an intercept should be included and why. When the intercept is estimated, how can it be interpreted?"
  },
  {
    "objectID": "assignments/assignments.html",
    "href": "assignments/assignments.html",
    "title": "Assignments",
    "section": "",
    "text": "Due Jan 26th:\n\nHomework 1 (math component)\nHomework 1 (code component)\n\nDue Feb 9th:\n\nHomework 2 (math component)\nHomework 2 (code component)\n\nDue Feb 23rd:\n\nHomework 3 (math component)\nHomework 3 (code component)"
  },
  {
    "objectID": "assignments/hw1_math.html",
    "href": "assignments/hw1_math.html",
    "title": "STAT151A Homework 1: Due Jan 26th",
    "section": "",
    "text": "1 Simple regression in matrix form\nConsider the simple linear model \\(y_n = \\beta_0 + \\beta_1 z_n + \\varepsilon_n\\).\nLet \\(\\bar{y}:= \\frac{1}{N} \\sum_{n=1}^Ny_n\\) and \\(\\bar{z}:= \\frac{1}{N} \\sum_{n=1}^Nz_n\\). Recall that the ordinary least squares estimates are given by \\[\n\\begin{aligned}\n    \\hat{\\beta}_1 = \\frac{\\frac{1}{N} \\sum_{n=1}^N(z_n - \\bar{z}) (y- \\bar{y})}{\\frac{1}{N} \\sum_{n=1}^N(z_n - \\bar{z})^2}\n    \\quad\\textrm{and}\\quad\n    \\hat{\\beta}_0 = \\bar{y}- \\hat{\\beta}_1 \\bar{z}.\n\\end{aligned}\n\\]\n\n(a)\nWrite the set of equations\n\\[\ny_n = \\beta_0 + \\beta_1 z_n + \\varepsilon_n\n\\]\nfor \\(n \\in \\{1, \\ldots, N\\}\\) in matrix form. That is, let \\(\\boldsymbol{X}\\) denote an \\(N \\times 2\\) matrix, \\(\\boldsymbol{Y}\\) and \\(\\boldsymbol{\\varepsilon}\\) denote \\(N \\times 1\\) matrices, \\(\\boldsymbol{\\beta}= (\\beta_0, \\beta_1)^\\intercal\\), and express the matrices \\(\\boldsymbol{Y}\\), \\(\\boldsymbol{X}\\), and \\(\\boldsymbol{\\varepsilon}\\) in terms of the scalars \\(y_n\\), \\(z_m\\), and \\(\\varepsilon_n\\) so that \\(\\boldsymbol{Y}= \\boldsymbol{X}\\boldsymbol{\\beta}+ \\boldsymbol{\\varepsilon}\\) is equivalent to the set of regression equations.\n\n\n(b)\nDefine \\[\n\\begin{aligned}\n    \\overline{zz} := \\frac{1}{N} \\sum_{n=1}^Nz_n^2\n    \\quad\\textrm{and}\\quad\n    \\overline{zy} := \\frac{1}{N} \\sum_{n=1}^Nz_n y_n\n\\end{aligned}\n\\]\nWrite an explict expressions for \\(\\boldsymbol{X}^\\intercal\\boldsymbol{X}\\), \\(\\boldsymbol{X}^\\intercal\\boldsymbol{Y}\\), and \\(\\left(\\boldsymbol{X}^\\intercal\\boldsymbol{X}\\right)^{-1}\\), all in terms of \\(\\bar{y}\\), \\(\\bar{z}\\), \\(\\overline{zz}\\), \\(\\overline{zy}\\), and \\(N\\). Verify that the inverse is correct by direct multiplication.\n\n\n(c)\nCompute \\((\\boldsymbol{X}^\\intercal\\boldsymbol{X})^{-1} \\boldsymbol{X}^\\intercal\\boldsymbol{Y}\\). Show that the first row is equal to \\(\\hat{\\beta}_0\\) and the second row is equal to \\(\\hat{\\beta}_1\\) as given by the ordinary least squares formula in the problem statement above.\n\n\n\n2 Mean zero residuals.\nConsider the model \\(y_n = \\beta z_n + \\varepsilon_n\\). Let \\(\\hat{\\beta}\\) denote the least squares estimator and \\(\\hat{\\varepsilon}_n = y_n - \\hat{\\beta}z_n\\).\n\n(a)\nSuppose \\(z_n\\) is not a constant. Is it necessarily the case that \\(\\frac{1}{N} \\sum_{n=1}^N\\hat{\\varepsilon}_n = 0\\)? Prove your answer.\n\n\n(b)\nSuppose \\(z_n\\) is a constant, but \\(z_n \\equiv 5\\) for every \\(n \\in \\{1, \\ldots, N\\}\\). Is it necessarily the case that \\(\\frac{1}{N} \\sum_{n=1}^N\\hat{\\varepsilon}_n = 0\\)? Prove your answer.\n\n\n(c)\nNow the model \\(y_n = \\beta_1 z_{n1} + \\beta_2 z_{n2} + \\varepsilon_n\\). Suppose that \\(z_{n1} = 1\\) is \\(n\\) is even, and is \\(0\\) otherwise. Similarly, suppose that \\(z_{n2} = 1\\) is \\(n\\) is odd, and is \\(0\\) otherwise. Let \\(N\\) be even. Is it necessarily the case that \\(\\frac{1}{N} \\sum_{n=1}^N\\hat{\\varepsilon}_n = 0\\)? Prove your answer.\n\n\n\n3 Inner products and covariances\nLet \\(\\boldsymbol{z}= (z_1, \\ldots, z_N)\\) and \\(\\boldsymbol{y}= (y_1, \\ldots, y_N)\\). Let \\(\\boldsymbol{X}\\) denote an \\(N \\times P\\) matrix whose \\(n\\)–th row is the transpose of the \\(P\\)-vector \\(\\boldsymbol{x}_n^\\intercal\\).\n(Note: this question involves limits of random variables, and there are many distinct ways that random variables can converge to limits. If you’re familiar with these different modes of probabilisitic convergence, feel free to state what mode of convergence applies, but if you are not, don’t worry — modes of convergence will not matter much for this class, and you can state your result heuristically.)\nFor a set of quantities (numbers, vectors, pairs of vectors, etc), the “empirical distribution” over that set refers to drawing an element with replacement from the set with equal probability given to each entry. For example, if \\(\\mathcal{Z}'\\) is a drawn from the empirical distribution over the set \\(\\{z_1, \\ldots, z_N \\}\\), then \\(\\mathbb{P}\\left(\\mathcal{Z}' = z_n\\right) = 1/N\\) for each \\(n\\). Similarly, if \\((\\mathcal{Z}', \\mathcal{Y}')\\) is drawn from the empirical distribution over the pairs \\(\\{(z_1, y_1), \\ldots, (z_N, y_N)\\}\\), then \\(\\mathbb{P}\\left((\\mathcal{Z}', \\mathcal{Y}') = (z_n, y_n)\\right) = 1/N\\) for all \\(n\\).\n(Hint: it may help to recall that the bootstrap uses draws from the empirical distribution, and that, in the empirical distribution, the elements of the set are fixed and not random.)\n\n(a)\nLet \\((\\mathcal{Z}', \\mathcal{Y}')\\) denote a draw from the empirical distribution over the set \\(\\{(y_1, z_1), \\ldots, (y_N, z_N)\\}\\).\nProve that \\(\\frac{1}{N} \\boldsymbol{z}^\\intercal\\boldsymbol{y}= \\mathbb{E}\\left[\\mathcal{Z}' \\mathcal{Y}'\\right]\\). Then prove that \\(\\frac{1}{N} \\boldsymbol{1}^\\intercal\\boldsymbol{z}= \\mathbb{E}\\left[\\mathcal{Z}'\\right]\\) as a special case.\n\n\n(b)\nNow suppose that the entries of \\(\\boldsymbol{z}\\) are independent and identically distributed (IID) realizations of the random variable \\(\\mathcal{Z}\\), and that the entries of \\(\\boldsymbol{y}\\) are similarly IID realizations of a random variable \\(\\mathcal{Y}\\). Assuming that \\(\\mathbb{E}\\left[|\\mathcal{Z}|\\right] &lt; \\infty\\) and \\(\\mathbb{E}\\left[|\\mathcal{Y}|\\right] &lt; \\infty\\), prove that\n\\[\n\\frac{1}{N} \\boldsymbol{z}^\\intercal\\boldsymbol{y}\\rightarrow\n    \\mathbb{E}\\left[\\mathcal{Z} \\mathcal{Y}\\right]\n    \\textrm{ as }N \\rightarrow \\infty\n\\]\n(Hint: don’t prove this from scratch, appeal to a probability theorem.)\n\n\n(c)\nUsing only inner products involving \\(\\boldsymbol{y}\\), \\(\\boldsymbol{z}\\), and \\(\\boldsymbol{1}\\), write an expression for \\(\\mathrm{Cov}\\left(\\mathcal{Y}', \\mathcal{Z}'\\right)\\). Prove that the expression converges with probability one to \\(\\mathrm{Cov}\\left(\\mathcal{Y}, \\mathcal{Z}\\right)\\). (Hint: again, use your previous results and a theorem from probability.)\n\n\n(d)\nNow, let \\((\\mathcal{X}', \\mathcal{Y}')\\) denote a draw from the empirical distribution over \\(\\{(x_1, y_1), \\ldots, (x_N, y_N) \\}\\). (Recall that the vector \\(x_n\\) is a length–\\(P\\) column vector, and \\(x_n^\\intercal\\) is the \\(n\\)–th row of the matrix \\(\\boldsymbol{X}\\).)\n\\[\n\\begin{aligned}\n\\frac{1}{N} \\boldsymbol{X}^\\intercal\\boldsymbol{X}= \\mathbb{E}\\left[\\mathcal{X}' \\mathcal{X}'^\\intercal\\right]\n\\quad\\textrm{and}\\quad\n\\frac{1}{N} \\boldsymbol{X}^\\intercal y= \\mathbb{E}\\left[\\mathcal{X}' \\mathcal{Y}'\\right].\n\\end{aligned}\n\\]\n\n\n(e)\nNow, suppose that rows of \\(\\boldsymbol{X}\\) are IID realizations of the random \\(P\\)–vector \\(\\mathcal{X}\\), and that \\(\\mathbb{E}\\left[|\\mathcal{X}_p|\\right] &lt; \\infty\\) for each \\(p \\in \\{ 1, \\ldots, P \\}\\). Assume, as above, that \\(\\mathbb{E}\\left[|\\mathcal{Y}|\\right] &lt; \\infty\\).\nProve that, as \\(N \\rightarrow \\infty\\),\n\\[\n\\frac{1}{N} \\boldsymbol{X}^\\intercal\\boldsymbol{X}\\rightarrow\n    \\mathbb{E}\\left[\\mathcal{X} \\mathcal{X}^\\intercal\\right]\n\\quad\\textrm{and}\\quad\n\\frac{1}{N} \\boldsymbol{X}^\\intercal\\boldsymbol{Y}\\rightarrow\n    \\mathbb{E}\\left[\\mathcal{X} \\mathcal{Y}\\right],\n\\]\nwhere both limits are with probability one.\n\n\n(f)\nNow assume that, for each \\(p \\in \\{1, \\ldots, P\\}\\) and \\(q \\in \\{1, \\ldots, P\\}\\), \\(\\mathbb{E}\\left[\\left|\\mathcal{X}'_p\\right| \\left|\\mathcal{X}'_q\\right| \\mathcal{Y}^2\\right] &lt; \\infty\\). Prove that, as \\(N \\rightarrow \\infty\\),\n\\[\n\\frac{1}{\\sqrt{N}}\n\\left( \\boldsymbol{X}^\\intercal\\boldsymbol{Y}- \\mathbb{E}\\left[\\boldsymbol{X}^\\intercal\\boldsymbol{Y}\\right] \\right) \\rightarrow \\mathcal{Z},\n\\]\nwhere \\(\\mathcal{Z}\\) is a multivariate normal random variable. What is the covariance of \\(\\mathcal{Z}\\)? (Hint: again, appeal to a probability theorem.)"
  },
  {
    "objectID": "assignments/hw2_math.html",
    "href": "assignments/hw2_math.html",
    "title": "STAT151A Homework 2: Due February 9th",
    "section": "",
    "text": "$$\n\\newcommand{\\trans}{\\intercal}\n\\newcommand{\\norm}[1]{\\left\\Vert#1\\right\\Vert}\n\\newcommand{\\abs}[1]{\\left|#1\\right|}\n\\newcommand{\\bbr}{\\mathbb{R}}\n\\newcommand{\\bbz}{\\mathbb{Z}}\n\\newcommand{\\bbc}{\\mathbb{C}}\n\\newcommand{\\gauss}[1]{\\mathcal{N}\\left(#1\\right)}\n\n\\newcommand{\\argmin}[1]{\\underset{#1}{\\mathrm{argmin}}\\,}\n\\newcommand{\\projop}[1]{\\underset{#1}{\\mathrm{Proj}}\\,}\n\\newcommand{\\proj}[1]{\\underset{#1}{\\mybold{P}}}\n\\newcommand{\\expect}[1]{\\mathbb{E}\\left[#1\\right]}\n\\newcommand{\\prob}[1]{\\mathbb{P}\\left(#1\\right)}\n\\newcommand{\\dens}[1]{\\mathit{p}\\left(#1\\right)}\n\\newcommand{\\var}[1]{\\mathrm{Var}\\left(#1\\right)}\n\\newcommand{\\cov}[1]{\\mathrm{Cov}\\left(#1\\right)}\n\\newcommand{\\sumn}{\\sum_{n=1}^N}\n\\newcommand{\\meann}{\\frac{1}{N} \\sumn}\n\n\\newcommand{\\trace}[1]{\\mathrm{trace}\\left(#1\\right)}\n\\newcommand{\\diag}[1]{\\mathrm{Diag}\\left(#1\\right)}\n\\newcommand{\\grad}[2]{\\nabla_{#1} \\left. #2 \\right.}\n\\newcommand{\\gradat}[3]{\\nabla_{#1} \\left. #2 \\right|_{#3}}\n\\newcommand{\\fracat}[3]{\\left. \\frac{#1}{#2} \\right|_{#3}}\n\n\\newcommand{\\mybold}[1]{\\boldsymbol{#1}}\n\n\\newcommand{\\W}{\\mybold{W}}\n\\newcommand{\\w}{w}\n\\newcommand{\\wbar}{\\bar{w}}\n\\newcommand{\\wv}{\\mybold{w}}\n\n\\newcommand{\\X}{\\mybold{X}}\n\\newcommand{\\x}{x}\n\\newcommand{\\xbar}{\\bar{x}}\n\\newcommand{\\xv}{\\mybold{x}}\n\\newcommand{\\Xcov}{\\Sigmam_{\\X}}\n\n\\newcommand{\\Z}{\\mybold{Z}}\n\\newcommand{\\z}{z}\n\\newcommand{\\zv}{\\mybold{z}}\n\\newcommand{\\zbar}{\\bar{z}}\n\n\\newcommand{\\Y}{\\mybold{Y}}\n\\newcommand{\\Yhat}{\\hat{\\Y}}\n\\newcommand{\\y}{y}\n\\newcommand{\\yv}{\\mybold{y}}\n\\newcommand{\\yhat}{\\hat{\\y}}\n\\newcommand{\\ybar}{\\bar{y}}\n\n\\newcommand{\\res}{\\varepsilon}\n\\newcommand{\\resv}{\\mybold{\\res}}\n\\newcommand{\\resvhat}{\\hat{\\mybold{\\res}}}\n\\newcommand{\\reshat}{\\hat{\\res}}\n\n\\newcommand{\\betav}{\\mybold{\\beta}}\n\\newcommand{\\betavhat}{\\hat{\\bv}}\n\\newcommand{\\betahat}{\\hat{\\beta}}\n\n\\newcommand{\\bv}{\\mybold{\\beta}}\n\\newcommand{\\bvhat}{\\hat{\\bv}}\n\\newcommand{\\bhat}{\\hat{\\beta}}\n\n\\newcommand{\\alphav}{\\mybold{\\alpha}}\n\\newcommand{\\alphavhat}{\\hat{\\av}}\n\\newcommand{\\alphahat}{\\hat{\\alpha}}\n\n\\newcommand{\\gv}{\\mybold{\\gamma}}\n\\newcommand{\\gvhat}{\\hat{\\gv}}\n\\newcommand{\\ghat}{\\hat{\\gamma}}\n\n\\newcommand{\\hv}{\\mybold{\\h}}\n\\newcommand{\\hvhat}{\\hat{\\hv}}\n\\newcommand{\\hhat}{\\hat{\\h}}\n\n\\newcommand{\\gammav}{\\mybold{\\gamma}}\n\\newcommand{\\gammavhat}{\\hat{\\gammav}}\n\\newcommand{\\gammahat}{\\hat{\\gamma}}\n\n\\newcommand{\\new}{\\mathrm{new}}\n\\newcommand{\\zerov}{\\mybold{0}}\n\\newcommand{\\onev}{\\mybold{1}}\n\\newcommand{\\id}{\\mybold{I}}\n\n\\newcommand{\\sigmahat}{\\hat{\\sigma}}\n\n\n\\newcommand{\\etav}{\\mybold{\\eta}}\n\\newcommand{\\muv}{\\mybold{\\mu}}\n\\newcommand{\\Sigmam}{\\mybold{\\Sigma}}\n\n\\newcommand{\\rdom}[1]{\\mathbb{R}^{#1}}\n\n\\newcommand{\\RV}[1]{\\tilde{#1}}\n\n\n\n\\def\\A{\\mybold{A}}\n\n\\def\\A{\\mybold{A}}\n\\def\\av{\\mybold{a}}\n\\def\\a{a}\n\n\\def\\B{\\mybold{B}}\n\n\n\\def\\S{\\mybold{S}}\n\\def\\sv{\\mybold{s}}\n\\def\\s{s}\n\n\\def\\R{\\mybold{R}}\n\\def\\rv{\\mybold{r}}\n\\def\\r{r}\n\n\\def\\V{\\mybold{V}}\n\\def\\vv{\\mybold{v}}\n\\def\\v{v}\n\n\\def\\U{\\mybold{U}}\n\\def\\uv{\\mybold{u}}\n\\def\\u{u}\n\n\\def\\Sc{\\mathcal{S}}\n\\def\\ev{\\mybold{e}}\n\n\\def\\Lammat{\\mybold{\\Lambda}}\n\n\n$$\n\n\n\n\n1 Transformation of variables\nConsider two different regressions, \\(\\Y \\sim \\X \\bv\\) and \\(\\Y \\sim \\Z \\alphav\\), with the same \\(\\Y\\), where \\(\\X\\) and \\(\\Z\\) are both \\(N \\times P\\) and are both full-rank. Let the \\(n\\)–th row of \\(\\X\\) be written \\(\\xv_n^\\trans\\), and the \\(n\\)–th row of \\(\\Z\\) be \\(\\zv_n^\\trans\\).\n\n(a)\nSuppose \\(\\xv_n = \\A \\zv_n\\) for an invertible \\(\\A\\) and for all \\(n = 1,\\ldots,N\\). Find an expression for \\(\\alphahat\\) in terms of \\(\\betahat\\) that does not explicitly use \\(\\Y\\), \\(\\X\\), or \\(\\Z\\).\n\n\n(b)\nSuppose that, for all \\(n=1,\\ldots,N\\), \\(\\xv_n = f(\\zv_n)\\) for some invertible but non-linear function \\(f(\\cdot)\\). In general, can you find an expression for \\(\\alphahat\\) in terms of \\(\\betahat\\) that does not explicitly use \\(\\Y\\), \\(\\X\\), or \\(\\Z\\)? Prove why or why not. (To prove that you cannot, finding a single counterexample is enough.)\n\n\n(c)\nNow consider only the regression \\(\\Y \\sim \\X \\bv\\), but suppose we are not interested in \\(\\bv\\), but rather some other \\(\\gv = \\phi(\\bv)\\), where \\(\\phi\\) is an invertible function. Prove that the least squares estimator of \\(\\gv\\) is given by \\(\\gvhat = \\phi(\\bvhat)\\).\n\n\n(d)\nProve that result (a) is special case of the result (c). (Hint: find the corresponding \\(\\phi\\).)\n\n\n\n2 Spaces of possible estimators.\nConsider the simple linear model \\(\\y_n = \\beta_0 + \\beta_1 \\z_n + \\res_n\\). Assume that \\(\\meann \\z_n \\ne 0\\).\n\n(a)\nFix \\(\\beta_0 = \\meann \\y_n\\) and find a value of \\(\\beta_1\\) such that \\(\\meann\\res_n = 0\\). How does your answer depend on whether or not \\(\\meann z_n = 0\\)?\n\n\n(b)\nFix \\(\\beta_1 = 10,000,000\\) and find a value of \\(\\beta_0\\) such that \\(\\meann\\res_n = 0\\).\n\n\n(c)\nIn general, how many different choices of \\(\\beta_0\\) and \\(\\beta_1\\) can you find that satisfy \\(\\meann\\res_n = 0\\)? Are all of them reasonable? Are any of them reasonable?\n\n\n(d)\nFind an \\(N\\)–dimensional vector \\(\\vv\\) such that \\[\n\\meann \\res_n = 0 \\quad\\Leftrightarrow\\quad \\vv^\\trans\\resv = \\zerov.\n\\]\n\n\n(e)\nSuppose I give you a general \\(N\\)–dimensional vector \\(\\vv\\) and a scalar \\(a\\). How many different choices of \\(\\beta_0\\) and \\(\\beta_1\\) can you find such that \\(\\vv^\\trans \\resv = a\\)?\n\n\n(f) (Optional — this will not be graded)\nSuppose I give you two different vectors, \\(\\vv_1\\) and \\(\\vv_2\\). Under what circumstances can you find \\(\\beta_0\\) and \\(\\beta_1\\) such that\n\\[\n\\begin{align}\n\\vv_1^\\trans \\resv = \\zerov\n\\quad\\textrm{and}\\quad\n\\vv_2^\\trans \\resv = \\zerov?\n\\end{align}\n\\]\nWhen are there infinitely many solutions? When is there only one solution? (Hint: what if \\(\\vv_1^\\trans \\onev = \\vv_2^\\trans \\onev = 0\\)?)\n\n\n(g)\nNow, consider the general linear model \\(\\Y = \\X \\bv + \\res\\). Prove that there always exists \\(\\bv\\) and \\(\\res\\) so that the \\(\\Y = \\X \\bv + \\res\\).\n\n\n(h) (Optional — this will not be graded)\nSuppose, for the general linear model, that the matrix \\(\\X\\) is full-rank (that is, of rank \\(P\\), where \\(P\\) is the number of columns of \\(\\X\\)). Suppose I give you a \\(N \\times D\\) matrix \\(\\V\\), and ask you to find \\(\\bv\\) such that \\(\\V^\\trans \\resv = \\zerov\\). Under what circumstances are there no solutions? A single solution? An infinite set of solutions? (Hint: you already answered this question for \\(P = 2\\), now you just need to state the result in matrix form.)\n\n\n\n3 Collinear regressors\nSuppose that \\(\\X\\) does not have full column rank — that is, \\(\\X\\) is \\(N \\times P\\) but has column rank \\(Q &lt; P\\).\n\n(a)\nHow many solutions \\(\\betahat\\) are there to the least-squares problem \\[\n\\betahat := \\argmin{\\beta} \\norm{\\Y - \\X \\beta}_2^2?\n\\]\n\n\n(b)\nRelate the solutions \\(\\betahat\\) from part (a) to spaces spanned by eigenvectors of \\(\\X^\\trans \\X\\). Among the solutions, identify the one with the smallest norm, \\(\\norm{\\betahat}_2^2\\).\n\n\n(c)\nSuppose that \\(\\X'\\) is a full column-rank \\(N \\times Q\\) matrix with the same column span as \\(\\X\\), and let \\(\\gammahat\\) be the OLS estimator for the regression \\(\\Y \\sim \\X'\\gamma\\). Compare the fits \\(\\Yhat = \\X\\betahat\\) and \\(\\Yhat' = \\X' \\gammahat\\), and compare the sum of squared residuals for the two regressions."
  },
  {
    "objectID": "assignments/hw3_math.html",
    "href": "assignments/hw3_math.html",
    "title": "STAT151A Homework 3: Due February 23rd",
    "section": "",
    "text": "$$\n\\newcommand{\\trans}{\\intercal}\n\\newcommand{\\norm}[1]{\\left\\Vert#1\\right\\Vert}\n\\newcommand{\\abs}[1]{\\left|#1\\right|}\n\\newcommand{\\bbr}{\\mathbb{R}}\n\\newcommand{\\bbz}{\\mathbb{Z}}\n\\newcommand{\\bbc}{\\mathbb{C}}\n\\newcommand{\\gauss}[1]{\\mathcal{N}\\left(#1\\right)}\n\n\\newcommand{\\argmin}[1]{\\underset{#1}{\\mathrm{argmin}}\\,}\n\\newcommand{\\projop}[1]{\\underset{#1}{\\mathrm{Proj}}\\,}\n\\newcommand{\\proj}[1]{\\underset{#1}{\\mybold{P}}}\n\\newcommand{\\expect}[1]{\\mathbb{E}\\left[#1\\right]}\n\\newcommand{\\prob}[1]{\\mathbb{P}\\left(#1\\right)}\n\\newcommand{\\dens}[1]{\\mathit{p}\\left(#1\\right)}\n\\newcommand{\\var}[1]{\\mathrm{Var}\\left(#1\\right)}\n\\newcommand{\\cov}[1]{\\mathrm{Cov}\\left(#1\\right)}\n\\newcommand{\\sumn}{\\sum_{n=1}^N}\n\\newcommand{\\meann}{\\frac{1}{N} \\sumn}\n\n\\newcommand{\\trace}[1]{\\mathrm{trace}\\left(#1\\right)}\n\\newcommand{\\diag}[1]{\\mathrm{Diag}\\left(#1\\right)}\n\\newcommand{\\grad}[2]{\\nabla_{#1} \\left. #2 \\right.}\n\\newcommand{\\gradat}[3]{\\nabla_{#1} \\left. #2 \\right|_{#3}}\n\\newcommand{\\fracat}[3]{\\left. \\frac{#1}{#2} \\right|_{#3}}\n\n\\newcommand{\\mybold}[1]{\\boldsymbol{#1}}\n\n\\newcommand{\\W}{\\mybold{W}}\n\\newcommand{\\w}{w}\n\\newcommand{\\wbar}{\\bar{w}}\n\\newcommand{\\wv}{\\mybold{w}}\n\n\\newcommand{\\X}{\\mybold{X}}\n\\newcommand{\\x}{x}\n\\newcommand{\\xbar}{\\bar{x}}\n\\newcommand{\\xv}{\\mybold{x}}\n\\newcommand{\\Xcov}{\\Sigmam_{\\X}}\n\n\\newcommand{\\Z}{\\mybold{Z}}\n\\newcommand{\\z}{z}\n\\newcommand{\\zv}{\\mybold{z}}\n\\newcommand{\\zbar}{\\bar{z}}\n\n\\newcommand{\\Y}{\\mybold{Y}}\n\\newcommand{\\Yhat}{\\hat{\\Y}}\n\\newcommand{\\y}{y}\n\\newcommand{\\yv}{\\mybold{y}}\n\\newcommand{\\yhat}{\\hat{\\y}}\n\\newcommand{\\ybar}{\\bar{y}}\n\n\\newcommand{\\res}{\\varepsilon}\n\\newcommand{\\resv}{\\mybold{\\res}}\n\\newcommand{\\resvhat}{\\hat{\\mybold{\\res}}}\n\\newcommand{\\reshat}{\\hat{\\res}}\n\n\\newcommand{\\betav}{\\mybold{\\beta}}\n\\newcommand{\\betavhat}{\\hat{\\bv}}\n\\newcommand{\\betahat}{\\hat{\\beta}}\n\n\\newcommand{\\bv}{\\mybold{\\beta}}\n\\newcommand{\\bvhat}{\\hat{\\bv}}\n\\newcommand{\\bhat}{\\hat{\\beta}}\n\n\\newcommand{\\alphav}{\\mybold{\\alpha}}\n\\newcommand{\\alphavhat}{\\hat{\\av}}\n\\newcommand{\\alphahat}{\\hat{\\alpha}}\n\n\\newcommand{\\gv}{\\mybold{\\gamma}}\n\\newcommand{\\gvhat}{\\hat{\\gv}}\n\\newcommand{\\ghat}{\\hat{\\gamma}}\n\n\\newcommand{\\hv}{\\mybold{\\h}}\n\\newcommand{\\hvhat}{\\hat{\\hv}}\n\\newcommand{\\hhat}{\\hat{\\h}}\n\n\\newcommand{\\gammav}{\\mybold{\\gamma}}\n\\newcommand{\\gammavhat}{\\hat{\\gammav}}\n\\newcommand{\\gammahat}{\\hat{\\gamma}}\n\n\\newcommand{\\new}{\\mathrm{new}}\n\\newcommand{\\zerov}{\\mybold{0}}\n\\newcommand{\\onev}{\\mybold{1}}\n\\newcommand{\\id}{\\mybold{I}}\n\n\\newcommand{\\sigmahat}{\\hat{\\sigma}}\n\n\n\\newcommand{\\etav}{\\mybold{\\eta}}\n\\newcommand{\\muv}{\\mybold{\\mu}}\n\\newcommand{\\Sigmam}{\\mybold{\\Sigma}}\n\n\\newcommand{\\rdom}[1]{\\mathbb{R}^{#1}}\n\n\\newcommand{\\RV}[1]{\\tilde{#1}}\n\n\n\n\\def\\A{\\mybold{A}}\n\n\\def\\A{\\mybold{A}}\n\\def\\av{\\mybold{a}}\n\\def\\a{a}\n\n\\def\\B{\\mybold{B}}\n\n\n\\def\\S{\\mybold{S}}\n\\def\\sv{\\mybold{s}}\n\\def\\s{s}\n\n\\def\\R{\\mybold{R}}\n\\def\\rv{\\mybold{r}}\n\\def\\r{r}\n\n\\def\\V{\\mybold{V}}\n\\def\\vv{\\mybold{v}}\n\\def\\v{v}\n\n\\def\\U{\\mybold{U}}\n\\def\\uv{\\mybold{u}}\n\\def\\u{u}\n\n\\def\\Sc{\\mathcal{S}}\n\\def\\ev{\\mybold{e}}\n\n\\def\\Lammat{\\mybold{\\Lambda}}\n\n\n$$\n\n\n\n\\(\\LaTeX\\)\n\n1 Normal intervals\nFor these problems, assume I give you a computer program that can compute the function \\(\\Phi(z) = \\prob{\\RV{z} \\le z}\\) where \\(\\RV{z}\\) is a standard scalar-valued random variable.\nLet \\(\\RV{x}\\) denote a scalar-valued \\(N(\\mu, \\sigma^2)\\) random variable. Using only \\(\\Phi(z)\\) and elementary arithmetic, construct functions that evaluate the following:\n\n(a)\n\\(a \\mapsto \\prob{\\RV{x} \\le a}\\)\n\n\n(b)\n\\(b \\mapsto \\prob{\\RV{x} \\ge b}\\)\n\n\n(c)\n\\(a, b \\mapsto \\prob{b \\le \\RV{x} \\le a}\\)\n\n\n(d)\n\\(a \\mapsto \\prob{\\abs{\\RV{x}} \\le a}\\)\n\n\n(e)\n\\(a \\mapsto \\prob{\\abs{\\RV{x}} \\ge a}\\)\n\n\n(f)\n\\(a \\mapsto \\prob{\\abs{\\RV{x}} &gt; a}\\)\n\n\n(g)\n\\(a \\mapsto \\prob{\\abs{\\RV{x}} = a}\\)\n\n\n\n2 Multivariate CLT\nLet \\(\\RV{\\xv}_n\\) denote an IID sequence of random variables in \\(\\rdom{P}\\) (not necessarily normal), each with zero mean and finite covariance matrix \\(\\Sigmam\\). Let \\(\\av \\in \\rdom{P}\\) denote a fixed vector.\n\n(a)\nUsing the univariate CLT, find the limiting distribution of\n\\[\n\\frac{1}{\\sqrt{N}} \\sumn \\av^\\trans \\RV{\\xv_n}.\n\\]\n\n\n(b)\nUsing the multivariate CLT and the continuous mapping theorem, find the limiting distribution of\n\\[\n\\av^\\trans \\left( \\frac{1}{\\sqrt{N}} \\sumn \\RV{\\xv_n}\\right).\n\\]\n\n\n(c)\nNow, suppose that \\(P = 2\\) and\n\\[\\Sigmam =\n\\begin{pmatrix}\n1 & -1 \\\\\n-1 & 1\n\\end{pmatrix}.\n\\]\nNote that we can write \\[\n\\RV{\\xv}_n =\n\\begin{pmatrix}\n\\RV{\\xv}_{n1} \\\\\n\\RV{\\xv}_{n2}\n\\end{pmatrix},\n\\] where \\(\\RV{\\xv}_{n1}\\) and \\(\\RV{\\xv}_{n2}\\) are scalars. Find the limiting distributions of each of the following expressions:\n\\[\n\\begin{aligned}\n\\frac{1}{\\sqrt{N}} \\sumn \\RV{\\xv}_{n1} \\rightarrow& \\textrm{?}\\\\\n\\frac{1}{\\sqrt{N}} \\sumn \\RV{\\xv}_{n2} \\rightarrow& \\textrm{?} \\\\\n\\frac{1}{\\sqrt{N}} \\sumn (\\RV{\\xv}_{n1} + \\RV{\\xv}_{n2}) \\rightarrow& \\textrm{?}\n\\end{aligned}\n\\]\n(This result demonstrates why it’s not enough to only look at the marginal distribution of the vector components when using a multivariate CLT.)\n\n\n\n3 Valid covariance matrices\nSuppose I were to tell you that the vector-valued random variable \\(\\xv\\) has a covariance matrix \\(\\cov{\\xv} = \\Sigmam\\) where \\(\\Sigmam\\) is not positive semi-definite (i.e., \\(\\Sigmam\\) has at least one negative eigenvalue). Show that, if this were true, you could construct a scalar-valued random variable with negative variance, which is impossible.\n(It follows from this argument every covariance matrix must be postive semi-definite.)"
  },
  {
    "objectID": "course_policies.html",
    "href": "course_policies.html",
    "title": "Syllabus and Course Structure",
    "section": "",
    "text": "Objectives\nBy the end of the course, you should be able to\n\nExpress standard regression analyses both mathematically and in R code\nCritically relate the intended use of a regression analysis to its methods and assumptions\nIdentify common practical and conceptual pitfalls of regression analysis, and to improve the analysis when possible\nCommunicate the process and results of a regression analysis simply and clearly for a broad audience, using well-organized prose, reproducible code, and effective data visualizations.\n\n\n\nAssignments, Exams, and Grading\n\nAttendance\nAttendance in lectures will be required and will contribute to the participation portion of the students’ grade. Laptops will not be permitted in lectures, and violation of this policy can constitute an absence for the purpose of the participation grade.\nIpads and phones will be permitted during lecture for note-taking as long as their use doesn’t inhibit participation.\nEach student will be given four lecture absences without losing any participation points, with the expectation that these absences will be used for illness and emergencies.\nAttendance at labs will be optional.\n\n\nGrading.\nThe weighting for the grades will be:\n\nHomework completion (each weighted equally): 16%\nHomework correctness (each weighted equally): 4%\nQuizzes (each weighted equally): 25%\nFinal exam: 25%\nGroup project: 20%\nParticipation (primarily lecture attendance): 10%\n\nGrades will not be curved except where otherwise noted. Letter grades will be assigned according the weighted points earned. A score within [90-92%) will earn an A-, [92-98%) will earn an A, and [99-100%) will earn an A+. Scores in the 80’s will receive B’s, in the 70’s will receive C’s, with the same thresholds for plusses and minuses. Scores below 70% will be considered failing. Grades will be non-negotiable.\n\n\nFinal exam.\nAn in-person pencil-and-paper final exam will be scheduled during the usual final exam week. Students will be allowed a one-page double-sided “cheatsheet” on the final exam.\n\n\nQuizzes.\nEvery two weeks we will have an twenty-minute in-class quiz, typically on the Tuesday following a homework due date. These quizzes will take the place of a sitdown midterm exam (i.e., there will be no midterm). No external materials, including cheatsheets, will be allowed during quizzes.\n\n\nHomework.\nHomework assignments will be published on Fridays and due two weeks later at 9pm. Homework will typically consist of a combination of mathematical problems and data analysis in R. All homework will be due as a pdf via Gradescope unless otherwise noted. Students can use whatever tool they like to produce the pdf (latex, Rmd, Jupyter, scanned handwritten notes for mathematical problems, etc.).\nThe purpose of homework is for students to attempt to work through problems on their own, both to advance their own understanding, and to allow the instructors to monitor student learning. Neither of these objectives are served if students are copying answers. For that reason, thoughtful and complete homework answers will receive nearly full credit (80% of the available homework points) even if incorrect. We strongly encourage students to submit their own best efforts, even if imperfect, rather than copy a correct answer.\n\n\nFinal group project.\nStudents will form groups of up to three people to submit a final project consisting of an analysis of a real dataset applying principles and techniques from the course.\n\n\nTurning-in assignments\nYou will be turning in your assignments on a platform called Gradescope. This is also the platform where your assignments will be graded, so you can return there to get feedback on your work. You are welcome to file a regrade request if you notice that we made an error in applying the rubric to your work, but be sure to do so within a week of the grades being posted. We will not accept regrade requests past that point.\nIn order to provide flexibility around emergencies that might arise for you throughout the semester (for example, missing a quiz due to COVID), we will apply for everyone:\n\none emergency drop for quizzes\n\ntwo emergency drops for homework\n\nThis means that we will drop your lowest quiz score (which would be a 0 if you were absent) before computing your quiz average. For homework, we will drop your two lowest. Unless students are excused by official university policies, additional drops will not be given.\nWe strongly recommend that students reserve their emergency drops for real emergencies.\n\n\nLate Work\nLate work will not be accepted. If work is not submitted on time, it will receive a zero.\nIt is entirely the students’ responsibility to turn work in on time.\n\n\n\nPrerequisites\nThis course will assume familiarity with the material in STAT 135 or STAT 102. STAT 135 implies other prerequisite courses (STAT 134 and its prerequisites). In particular, you must have had linear algebra, so you should be familiar with basic matrix operations, vector subspaces and projections, rank and invertibility of matrices, and quadratic forms.\nThis semester of Stat151A will include labs and projects in the R language. Proficiency with R at the level of the is a prerequisite. Students with a strong background in another programming language (e.g. Python) will be permitted to enroll with the understanding that they will learn R on their own prior to the start of the class.\n\n\nMaterials\nUnelss otherwise noted, the primary materials for the course are the lecture notes, which will be posted to the course website in advance of class. The following textbooks are useful supplementary texts and are all freely available online:\n\nLinear Models and Extensions Ding\nRegression and other Stories Gelman, Hill, Vehtari\nAn Introduction to Statistical Learning James, Witten, Hastie, Tibshirani\nR for Data Science, Wickham, Grolemund\n\n\nRStudio\nThe software that we’ll be using for our data analysis is the free and open-source language called R that we’ll be interacting with via software called RStudio. If you have difficulty installing RStudio, please reach out to an instructor.\n\n\nCourse website\nAll of the assignments will be posted to the course website at https://stat151a.berkeley.edu/spring-2024/. This also holds the course notes, the syllabus, and links to Gradescope and RStudio.\n\n\n\nPolicies\n\nCourse Culture\nStudents taking STAT151A come from a wide range of backgrounds. We hope to foster an inclusive and supportive learning environment based on curiosity rather than competition. All members of the course community—the instructor, students, tutors, and readers—are expected to treat each other with courtesy and respect.\nYou will be interacting with course staff and fellow students in several different environments: in class, over the discussion forum, and in office hours. Some of these will be in person, some of them will be online, but the same expectations hold: be kind, be respectful, be professional.\nIf you are concerned about classroom environment issues created by other students or course staff, please come talk to the instructors about it.\n\n\nCollaboration policy\nYou are encouraged to collaborate with your fellow students on problem sets and labs, but the work you turn in should reflect your own understanding and all of your collaborators must be cited. The individual component of quizzes, reading questions, and exams must reflect only your work.\nResearchers don’t use one another’s research without permission; scholars and students always use proper citations in papers; professors may not circulate or publish student papers without the writer’s permission; and students may not circulate or post non-public materials (quizzes, exams, rubrics-any private class materials) from their class without the written permission of the instructor.\nThe general rule: you must not submit assignments that reflect the work of others unless they are a cited collaborator.\nThe following examples of collaboration are allowed and in fact encouraged!\n\nDiscussing how to solve a problem with a classmate.\nShowing your code to a classmate along with an error message or confusing output.\nPosting snippets of your code to the discussion forum when seeking help.\nHelping other students solve questions on the discussion with conceptual pointers or snippets of code that doesn’t whole hog give away the answer.\nGoogling the text of an error message.\nCopying small snippets of code from answers on Stack Overflow.\n\nThe following examples are not allowed:\n\nLeaving a representation of your assignment (the text, a screenshot) where students (current and future) can access it. Examples of this include websites like course hero, on a group text chain, over discord/slack, or in a file passed on to future students.\nAccessing and submitting solutions to assignments from other students distributed as above. This includes copying written answers from other students and slightly modifying the language to differentiate it.\nSearching or using generative AI to produce complete problem solutions.\nWorking on the final exam or individual quizzes in collaboration with other people or resources. These assignments must reflect individual work.\nSubmitting work on an exam that reflects consultation with outside resources or other people. Exams must reflect individual work.\n\nIf you have questions about the boundaries of the policy, please ask. We’re always happy to clarify.\n\n\nViolations of the collaboration policy\nThe integrity of our course depends on our ability to ensure that students do not violate the collaboration policy. We take this responsibility seriously and forward cases of academic misconduct to the Center for Student Conduct.\nStudents determined to have violated the academic misconduct policy by the Center for Student Conduct will receive a grade penalty in the course and a sanction from the university which is generally: (i) First violation: Non-Reportable Warning and educational intervention, (ii) Second violation: Suspension/Disciplinary Probation and educational interventions, (iii) Third violation: Dismissal.\nAnd again, if you have questions about the boundaries of the collaboration policy, please ask!\n\n\nLaptop policy\nLaptops will not be permitted in lecture, but will be required for labs.\nIf you do not have access to a laptop, you can borrow one from the University library. See the UC Berkeley hardware lending program for more details. The Student Technology Equity Program is another good resource. Feel free to contact the instructor if you have concerns about your access to needed technology.\n\n\nCOVID policy\nMaintaining your health and that of the Berkeley community is of primary importance to course staff, so if you are feeling ill or have been exposed to illness, please do not come to class. All of the materials used in class will be posted to the course website. You’re encouraged to reach out to fellow students to discuss the class materials or stop by group tutoring or office hours to chat with a tutor or the instructor.\n\n\nAccomodations for students with disabilities\nStat 151A is a course that is designed to allow all students to succeed. If you have letters of accommodations from the Disabled Students’ Program, please share them with your instructor as soon as possible, and we will work out the necessary arrangements.\n\n\n\n\n\n\nNote\n\n\n\nThese course polices are based on a template and text generously shared by Andrew Bray. Thanks, Andrew!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistics 151A: Linear Models",
    "section": "",
    "text": "Gradescope\n  RStudio\n  BCourses\n  ED\n\nNo matching items"
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Statistics 151A: Linear Models",
    "section": "Instructors",
    "text": "Instructors\n\n\nInstructor: Ryan Giordano  Office: 389 Evans Hall Office hours: 9:30am-11am Mondays (subject to change) rgiordano@berkeley.edu pronouns: He / him\n\n\nGSI: Dohyeong Ki  Office: TBD Evans Hall Office hours: 3:30pm-5:30pm Thursdays (subject to change) dohyeong_ki@berkeley.edu pronouns: He / him\n\n\n\n\n\n\n\n\nImportant\n\n\n\nDay-to-day announcements can be found in BCourses. Discussions can be found in ED. (See links above.)"
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "Statistics 151A: Linear Models",
    "section": "Schedule",
    "text": "Schedule\nLectures will be held Jan 16 2024 – May 03 2024 on Tuesday and Thursday, 9:30 am – 10:59 am, in Etcheverry 3108.\nLabs will be held on Wednesdays from 9:00 am – 11:00 am and 1:00pm – 3:00 pm in Evans 344.\n(Link to official course calendar.)\nThe following subject schedule is tentative and subject to change."
  },
  {
    "objectID": "lectures/Lecture10.html",
    "href": "lectures/Lecture10.html",
    "title": "Estimating prediction uncertainty: Estimating the residual variance",
    "section": "",
    "text": "\\(\\LaTeX\\)"
  },
  {
    "objectID": "lectures/Lecture10.html#method-1-apply-lln-to-the-squared-residuals",
    "href": "lectures/Lecture10.html#method-1-apply-lln-to-the-squared-residuals",
    "title": "Estimating prediction uncertainty: Estimating the residual variance",
    "section": "Method 1: Apply LLN to the squared residuals",
    "text": "Method 1: Apply LLN to the squared residuals"
  },
  {
    "objectID": "lectures/Lecture10.html#method-2-projection-to-get-the-unbiased-estimate",
    "href": "lectures/Lecture10.html#method-2-projection-to-get-the-unbiased-estimate",
    "title": "Estimating prediction uncertainty: Estimating the residual variance",
    "section": "Method 2: Projection to get the unbiased estimate",
    "text": "Method 2: Projection to get the unbiased estimate\n(Note connection to RSS.)"
  },
  {
    "objectID": "lectures/Lecture3.html",
    "href": "lectures/Lecture3.html",
    "title": "Linear algebra for linear regression.",
    "section": "",
    "text": "$$\n\\newcommand{\\trans}{\\intercal}\n\\newcommand{\\norm}[1]{\\left\\Vert#1\\right\\Vert}\n\\newcommand{\\abs}[1]{\\left|#1\\right|}\n\\newcommand{\\bbr}{\\mathbb{R}}\n\\newcommand{\\bbz}{\\mathbb{Z}}\n\\newcommand{\\bbc}{\\mathbb{C}}\n\\newcommand{\\gauss}[1]{\\mathcal{N}\\left(#1\\right)}\n\n\\newcommand{\\argmin}[1]{\\underset{#1}{\\mathrm{argmin}}\\,}\n\\newcommand{\\projop}[1]{\\underset{#1}{\\mathrm{Proj}}\\,}\n\\newcommand{\\proj}[1]{\\underset{#1}{\\mybold{P}}}\n\\newcommand{\\expect}[1]{\\mathbb{E}\\left[#1\\right]}\n\\newcommand{\\prob}[1]{\\mathbb{P}\\left(#1\\right)}\n\\newcommand{\\dens}[1]{\\mathit{p}\\left(#1\\right)}\n\\newcommand{\\var}[1]{\\mathrm{Var}\\left(#1\\right)}\n\\newcommand{\\cov}[1]{\\mathrm{Cov}\\left(#1\\right)}\n\\newcommand{\\sumn}{\\sum_{n=1}^N}\n\\newcommand{\\meann}{\\frac{1}{N} \\sumn}\n\n\\newcommand{\\trace}[1]{\\mathrm{trace}\\left(#1\\right)}\n\\newcommand{\\diag}[1]{\\mathrm{Diag}\\left(#1\\right)}\n\\newcommand{\\grad}[2]{\\nabla_{#1} \\left. #2 \\right.}\n\\newcommand{\\gradat}[3]{\\nabla_{#1} \\left. #2 \\right|_{#3}}\n\\newcommand{\\fracat}[3]{\\left. \\frac{#1}{#2} \\right|_{#3}}\n\n\\newcommand{\\mybold}[1]{\\boldsymbol{#1}}\n\n\\newcommand{\\W}{\\mybold{W}}\n\\newcommand{\\w}{w}\n\\newcommand{\\wbar}{\\bar{w}}\n\\newcommand{\\wv}{\\mybold{w}}\n\n\\newcommand{\\X}{\\mybold{X}}\n\\newcommand{\\x}{x}\n\\newcommand{\\xbar}{\\bar{x}}\n\\newcommand{\\xv}{\\mybold{x}}\n\\newcommand{\\Xcov}{\\Sigmam_{\\X}}\n\n\\newcommand{\\Z}{\\mybold{Z}}\n\\newcommand{\\z}{z}\n\\newcommand{\\zv}{\\mybold{z}}\n\\newcommand{\\zbar}{\\bar{z}}\n\n\\newcommand{\\Y}{\\mybold{Y}}\n\\newcommand{\\Yhat}{\\hat{\\Y}}\n\\newcommand{\\y}{y}\n\\newcommand{\\yv}{\\mybold{y}}\n\\newcommand{\\yhat}{\\hat{\\y}}\n\\newcommand{\\ybar}{\\bar{y}}\n\n\\newcommand{\\res}{\\varepsilon}\n\\newcommand{\\resv}{\\mybold{\\res}}\n\\newcommand{\\resvhat}{\\hat{\\mybold{\\res}}}\n\\newcommand{\\reshat}{\\hat{\\res}}\n\n\\newcommand{\\betav}{\\mybold{\\beta}}\n\\newcommand{\\betavhat}{\\hat{\\bv}}\n\\newcommand{\\betahat}{\\hat{\\beta}}\n\n\\newcommand{\\bv}{\\mybold{\\beta}}\n\\newcommand{\\bvhat}{\\hat{\\bv}}\n\\newcommand{\\bhat}{\\hat{\\beta}}\n\n\\newcommand{\\alphav}{\\mybold{\\alpha}}\n\\newcommand{\\alphavhat}{\\hat{\\av}}\n\\newcommand{\\alphahat}{\\hat{\\alpha}}\n\n\\newcommand{\\gv}{\\mybold{\\gamma}}\n\\newcommand{\\gvhat}{\\hat{\\gv}}\n\\newcommand{\\ghat}{\\hat{\\gamma}}\n\n\\newcommand{\\hv}{\\mybold{\\h}}\n\\newcommand{\\hvhat}{\\hat{\\hv}}\n\\newcommand{\\hhat}{\\hat{\\h}}\n\n\\newcommand{\\gammav}{\\mybold{\\gamma}}\n\\newcommand{\\gammavhat}{\\hat{\\gammav}}\n\\newcommand{\\gammahat}{\\hat{\\gamma}}\n\n\\newcommand{\\new}{\\mathrm{new}}\n\\newcommand{\\zerov}{\\mybold{0}}\n\\newcommand{\\onev}{\\mybold{1}}\n\\newcommand{\\id}{\\mybold{I}}\n\n\\newcommand{\\sigmahat}{\\hat{\\sigma}}\n\n\n\\newcommand{\\etav}{\\mybold{\\eta}}\n\\newcommand{\\muv}{\\mybold{\\mu}}\n\\newcommand{\\Sigmam}{\\mybold{\\Sigma}}\n\n\\newcommand{\\rdom}[1]{\\mathbb{R}^{#1}}\n\n\\newcommand{\\RV}[1]{\\tilde{#1}}\n\n\n\n\\def\\A{\\mybold{A}}\n\n\\def\\A{\\mybold{A}}\n\\def\\av{\\mybold{a}}\n\\def\\a{a}\n\n\\def\\B{\\mybold{B}}\n\n\n\\def\\S{\\mybold{S}}\n\\def\\sv{\\mybold{s}}\n\\def\\s{s}\n\n\\def\\R{\\mybold{R}}\n\\def\\rv{\\mybold{r}}\n\\def\\r{r}\n\n\\def\\V{\\mybold{V}}\n\\def\\vv{\\mybold{v}}\n\\def\\v{v}\n\n\\def\\U{\\mybold{U}}\n\\def\\uv{\\mybold{u}}\n\\def\\u{u}\n\n\\def\\Sc{\\mathcal{S}}\n\\def\\ev{\\mybold{e}}\n\n\\def\\Lammat{\\mybold{\\Lambda}}\n\n\n$$\n\n\n\n\\(\\textcolor{white}{\\LaTeX}\\)\n\nGoals\n\nDerive the general form of the ordinary least squares (OLS) estimator in matrix notation\n\nReview simple least squares derivation\nReview matrix notation\nReview vector calculus\nDerive the general OLS formula and show that the simple least squares is a special case\n\n\n\n\nSiomple least squares\nRecall the simple least squares model:\n\\[\n\\begin{align*}\n\\y_n :={}& \\textrm{Response (e.g. body fat)} \\\\\n\\x_n :={}& \\textrm{Regressor (e.g. waist measurement)}\\\\\ny_n ={}& \\beta_2 \\x_n + \\beta_1 + \\res_n \\textrm{ Model (straight line through data)}.\n\\end{align*}\n\\tag{1}\\]\n\n\n\n\n\n\nNotation\n\n\n\nHere are some key quantities and their names:\n\n\\(\\y_n\\): The ‘response’\n\\(\\x_n\\): The ‘regressors’ or ‘explanatory’ variables\n\nFor a linear model, we also have:\n\n\\(\\res_n\\): The ‘error’ or ‘residual’\n\\(\\beta_2, \\beta_1\\): The ‘coefficients’, ‘parameters’, ‘slope and intercept’\n\nWe might also have estimates of these quantities:\n\n\\(\\bhat_p\\): Estimate of \\(\\beta_p\\)\n\\(\\reshat\\): Estimate of \\(\\res_n\\)\n\\(\\yhat_n\\): A ‘prediction’ or ‘fitted value’ \\(\\yhat_n = \\bhat_1 + \\bhat_2 \\x_n\\)\n\nWhen we form the estimator by minimizing the estimated residuals, we might call the estimate\n\n‘Ordinary least squares’ (or ‘OLS’)\n‘Least-squares’\n‘Linear regression’\n\nAn estimate will implicitly be least-squares estimates, but precisely what we mean by an estimate may have to come from context.\n\n\nNote that for any value of \\(\\beta\\), we get a value of the “error” or “residual” \\(\\res_n\\):\n\\[\n\\res_n = \\y_n - (\\beta_2 \\x_n + \\beta_1).\n\\]\nThe “least squares fit” is called this because we choose \\(\\beta_1\\) and \\(\\beta_2\\) to make \\(\\sumn \\res_n^2\\) as small as possible:\n\\[\n\\begin{align*}\n\\textrm{Choose }\\bhat_2,\\bhat_1\\textrm{ so that }\n\\sumn \\res_n^2 = \\sumn \\left(  \\y_n - (\\bhat_2 \\x_n + \\bhat_1) \\right)^2\n\\textrm{ is as small as possible.}\n\\end{align*}\n\\]\nHow do we do this for the simple least squares model? And what if we have more regressors?\n\n\nSiomple least squares estimator derivation\nThe quantity we’re trying to minimize is smooth and convex, so if there is a minimum it would satisfy\n\\[\n\\begin{align*}\n\\fracat{\\partial \\sumn \\res_n^2}{\\partial \\beta_1}{\\bhat_1, \\bhat_2} ={}& 0 \\quad\\textrm{and} \\\\\n\\fracat{\\partial \\sumn \\res_n^2}{\\partial \\beta_2}{\\bhat_1, \\bhat_2} ={}& 0.\n\\end{align*}\n\\]\n\n\n\n\n\n\nQuestion\n\n\n\nWhen is it sufficient to set the gradient equal to zero to find a minumum?\n\n\nThese translate to (after dividing by \\(-2 N\\))\n\\[\n\\begin{align*}\n\\meann \\y_n - \\bhat_2 \\meann \\x_n - \\bhat_1 ={}& 0 \\quad\\textrm{and}\\\\\n\\meann \\y_n \\x_n - \\bhat_2 \\meann \\x_n^2 - \\bhat_1 \\meann \\x_n  ={}& 0.\n\\end{align*}\n\\]\nLet’s introduce the notation\n\\[\n\\begin{align*}\n\\overline{y} ={}& \\meann \\y_n \\\\\n\\overline{xy} ={}& \\meann \\x_n \\y_n \\\\\n\\overline{xx} ={}& \\meann \\x_n ^2,\n\\end{align*}\n\\]\nOur estimator them must satisfy\n\\[\n\\begin{align*}\n\\overline{x} \\bhat_2  + \\bhat_1 ={}& \\overline{y} \\quad\\textrm{and}\\\\\n\\overline{xx} \\bhat_2  + \\overline{x} \\bhat_1  ={}& \\overline{yx}.\n\\end{align*}\n\\]\nWe have a linear system with two unknowns and two equations. An elegant way to solve them is to subtract \\(\\overline{x}\\) times the first equation from the second, giving:\n\\[\n\\begin{align*}\n\\overline{x} \\bhat_1 - \\overline{x} \\bhat_1 +\n    \\overline{xx} \\bhat_2 - \\overline{x}^2 \\bhat_2 ={}&\n    \\overline{xy} - \\overline{x} \\overline{y} \\Leftrightarrow\\\\\n\\bhat_2 ={}&\n    \\frac{\\overline{xy} - \\overline{x} \\overline{y}}\n         {\\overline{xx}  - \\overline{x}^2},\n\\end{align*}\n\\]\nas long as \\(\\overline{xx} - \\overline{x}^2 \\ne 0\\).\n\n\n\n\n\n\nQuestion\n\n\n\nIn ordinary language, what does it mean for \\(\\overline{xx} - \\overline{x}^2 = 0\\)?\n\n\nWe can then plug this into the first equation giving\n\\[\n\\bhat_1 = \\overline{y} - \\bhat_2 \\overline{x}.\n\\]\n\n\nMatrix multiplication version\nAlternatively, our criterion can be written in matrix form as\n\\[\n\\begin{pmatrix}\n1  & \\overline{x} \\\\\n\\overline{x} & \\overline{xx}\n\\end{pmatrix}\n\\begin{pmatrix}\n\\bhat_1 \\\\\n\\bhat_2\n\\end{pmatrix} =\n\\begin{pmatrix}\n\\overline{y} \\\\\n\\overline{xy}\n\\end{pmatrix}\n\\tag{2}\\]\nRecall that there is a special matrix that allows us to get an expression for \\(\\bhat_1\\) and \\(\\bhat_2\\):\n\\[\n\\begin{align*}\n\\begin{pmatrix}\n1  & \\overline{x} \\\\\n\\overline{x} & \\overline{xx}\n\\end{pmatrix}^{-1} =\n\\frac{1}{\\overline{xx} - \\overline{x}^2}\n\\begin{pmatrix}\n\\overline{xx}  & - \\overline{x} \\\\\n-\\overline{x} & 1\n\\end{pmatrix}\n\\end{align*}\n\\]\nThis matrix is called the “inverse” because\n\\[\n\\begin{align*}\n\\begin{pmatrix}\n1  & \\overline{x} \\\\\n\\overline{x} & \\overline{xx}\n\\end{pmatrix}^{-1}\n\\begin{pmatrix}\n1  & \\overline{x} \\\\\n\\overline{x} & \\overline{xx}\n\\end{pmatrix} =\n\\begin{pmatrix}\n1 & 0 \\\\\n0 & 1\n\\end{pmatrix}.\n\\end{align*}\n\\]\n\n\n\n\n\n\nExercise\n\n\n\nVerify the preceding property.\n\n\nMultiplying both sides of Equation 2 by the matrix inverse gives\n\\[\n\\begin{pmatrix}\n1 & 0 \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n\\bhat_1 \\\\\n\\bhat_2\n\\end{pmatrix} =\n\\begin{pmatrix}\n\\bhat_1 \\\\\n\\bhat_2\n\\end{pmatrix} =\n\\frac{1}{\\overline{xx} - \\overline{x}^2}\n\\begin{pmatrix}\n\\overline{xx}  & - \\overline{x} \\\\\n-\\overline{x} & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n\\overline{y} \\\\\n\\overline{xy}\n\\end{pmatrix}.\n\\]\nFrom this we can read off the familiar answer\n\\[\n\\begin{align*}\n\\bhat_2 ={}& \\frac{\\overline{xy} - \\overline{x}\\,\\overline{y}}{\\overline{xx} - \\overline{x}^2}\\\\\n\\bhat_1 ={}& \\frac{\\overline{xx}\\,\\overline{y} - \\overline{xy}\\,\\overline{x}}{\\overline{xx} - \\overline{x}^2}\\\\\n  ={}& \\frac{\\overline{xx}\\,\\overline{y} -\n      \\overline{x}^2 \\overline{y} + \\overline{x}^2 \\overline{y} - \\overline{xy}\\,\\overline{x}}\n    {\\overline{xx} - \\overline{x}^2}\\\\\n  ={}& \\overline{y} - \\frac{\\overline{x}^2 \\overline{y} - \\overline{xy}\\,\\overline{x}}\n    {\\overline{xx} - \\overline{x}^2} \\\\\n  ={}& \\overline{y} - \\bhat_1 \\overline{x}.\n\\end{align*}\n\\]\n\n\nMatrix notation\nThe preceding formula came from combining the equations that set the univariate gradients equal to zero, and then recognizing a matrix equation. We can in fact do both at the same time! But first we need some notation\nHere is a formal definition of the type of model that we will study for the vast majority of the semester:\n\\[\n\\begin{align*}\n\\y_n ={}& \\beta_1 \\x_{n1} + \\beta_2 \\x_{n2} + \\ldots + \\x_{nP} + \\res_{n}, \\quad\\textrm{For }n=1,\\ldots,N.\n\\end{align*}\n\\tag{3}\\]\n\n\n\n\n\n\nNotation\n\n\n\nI will always use \\(N\\) for the number of observed data points, and \\(P\\) for the dimension of the regression vector.\n\n\nEquation 3 is a general form of simpler cases. For example, if we take \\(\\x_{n1} \\equiv 1\\), \\(\\x_{n2}= \\x_n\\) to be some scalar, and \\(P = 2\\), then Equation 3 becomes Equation 1:\n\\[\n\\begin{align*}\n\\y_n ={}& \\beta_1  + \\beta_2 \\x_{n} + \\res_{n}, \\quad\\textrm{For }n=1,\\ldots,N.\n\\end{align*}\n\\]\nThe residuals \\(\\res_n\\) measure the “misfit” of the line. If you know \\(\\beta_1, \\ldots, \\beta_P\\), then you can compute\n\\[\n\\begin{align*}\n\\res_n ={}& \\y_n -  (\\beta_1 \\x_{n1} + \\beta_2 \\x_{n2} + \\ldots + \\x_{nP}).\n\\end{align*}\n\\]\nBut in general we only observe \\(\\y_n\\) and \\(\\x_{n1}, \\ldots, \\x_{nP}\\), and we choose \\(\\beta_1, \\ldots, \\beta_P\\) to make the residuals small. (How we do this precisely will be something we talk about at great length.)\nThe general form of Equation 3 can be written more compactly using matrix and vector notation. Specifically, if we let\n\\[\n\\begin{align*}\n\\xv_n :=\n\\begin{pmatrix}\n  \\x_{n1} \\\\ \\x_{n2} \\\\ \\vdots \\\\ \\x_{nP}\n\\end{pmatrix}\n\\quad\n\\textrm{and}\n\\quad\n\\bv :=\n\\begin{pmatrix}\n  \\beta_{1} \\\\ \\beta_2 \\\\ \\vdots \\\\ \\beta_{P}\n\\end{pmatrix}\n\\end{align*}\n\\]\n\n\n\n\n\n\nNotation\n\n\n\nBold lowercase variables are column vectors (unless otherwise specified).\n\n\nRecall that the “transpose” operator \\((\\cdot)^\\trans\\) flips the row and columns of a matrix. For example,\n\\[\n\\begin{align*}\n\\xv_n ^\\trans =\n\\begin{pmatrix}\n  \\x_{n1} & \\x_{n2} & \\ldots & \\x_{nP}\n\\end{pmatrix}.\n\\end{align*}\n\\]\nBy matrix multiplication rules,\n\\[\n\\begin{align*}\n\\xv_n^\\trans \\bv =\n\\begin{pmatrix}\n  \\x_{n1} & \\x_{n2} & \\ldots & \\x_{nP}\n\\end{pmatrix}\n\\quad\\quad\\quad\n\\begin{pmatrix}\n  \\beta_{1} \\\\ \\beta_2 \\\\ \\vdots \\\\ \\beta_{P}\n\\end{pmatrix}\n= \\beta_1 \\x_{n1} + \\beta_2 \\x_{n2} + \\ldots + \\x_{nP}.\n\\end{align*}\n\\]\n\n\n\n\n\n\nNotation\n\n\n\nI have written \\(\\xv_n^\\trans \\bv\\) for the “dot product” or “inner product” between \\(\\xv_n\\) and \\(\\bv\\). Writing it in this way clarifies the relationship with matrix notation below.\nThere are many other ways to denote inner products in the literature, including \\(\\xv_n \\cdot \\bv\\) and \\(&lt;\\xv_n, \\bv&gt;\\).\n\n\nThen we can compactly write\n\\[\n\\begin{align*}\n\\y_n ={}& \\xv_n ^\\trans \\bv + \\res_{n}, \\quad\\textrm{For }n=1,\\ldots,N.\n\\end{align*}\n\\]\nWe can compactify it even further if we stack the \\(n\\) observations: % \\[\n\\begin{align*}\n\\y_1 ={}& \\xv_1 ^\\trans \\bv + \\res_{1} \\\\\n\\y_2 ={}& \\xv_2 ^\\trans \\bv + \\res_{2} \\\\\n\\vdots\\\\\n\\y_N ={}& \\xv_N ^\\trans \\bv + \\res_{N} \\\\\n\\end{align*}\n\\]\nAs before we can stack the responses and residuals:\n\\[\n\\begin{align*}\n\\Y :=\n\\begin{pmatrix}\n  \\y_{1} \\\\ \\y_2 \\\\ \\vdots \\\\ \\y_{P}\n\\end{pmatrix}\n\\quad\n\\textrm{and}\n\\quad\n\\resv :=\n\\begin{pmatrix}\n  \\res_{1} \\\\ \\res_2 \\\\ \\vdots \\\\ \\res_{P}\n\\end{pmatrix}\n\\end{align*}\n\\]\nWe can also stack the regressors:\n\\[\n\\begin{align*}\n\\X :=\n\\begin{pmatrix}\n  \\x_{11} & \\x_{12} & \\ldots & \\x_{1P}\\\\\n  \\x_{21} & \\x_{22} & \\ldots & \\x_{2P}\\\\\n  \\vdots\\\\\n  \\x_{n1} & \\x_{n2} & \\ldots & \\x_{nP}\\\\\n  \\vdots\\\\\n    \\x_{N1} & \\x_{N2} & \\ldots & \\x_{NP}\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n  \\xv_{1}^\\trans \\\\ \\xv_{2}^\\trans \\\\ \\vdots \\\\ \\xv_n^\\trans \\\\ \\vdots \\\\ \\xv_{N}^\\trans\n\\end{pmatrix}\n\\end{align*}\n\\]\n\n\n\n\n\n\nNotation\n\n\n\nI will use upper case bold letters for multi-dimensional matrices like \\(\\X\\). But I may also use upper case bold letters even when the quantity could also be a column vector, when I think it’s more useful to think of the quantity as a matrix with a single column. Examples are \\(\\Y\\) above, or \\(\\X\\) when \\(P = 1\\).\n\n\nNote that by matrix multiplication rules,\n\\[\n\\begin{align*}\n\\X  \\bv =\n\\begin{pmatrix}\n  \\xv_{1}^\\trans \\\\ \\xv_{2}^\\trans \\\\ \\vdots \\\\ \\xv_n^\\trans \\\\ \\vdots \\\\ \\xv_{N}^\\trans\n\\end{pmatrix}\n\\quad\\quad\\quad\n\\bv\n=\n\\begin{pmatrix}\n  \\xv_{1}^\\trans\\bv \\\\ \\xv_{2}^\\trans\\bv \\\\ \\vdots \\\\ \\xv_n^\\trans\\bv \\\\ \\vdots \\\\ \\xv_{N}^\\trans\\bv\n\\end{pmatrix}\n\\end{align*}\n\\]\nso we end up with the extremely tidy expression\n\\[\n\\begin{align*}\n\\y_n ={}& \\beta_1 \\x_{n1} + \\beta_2 \\x_{n2} + \\ldots + \\x_{nP} + \\res_{n}, \\quad\\textrm{For }n=1,\\ldots,N\n\\\\\\\\&\\textrm{is the same as}\\quad\\\\\\\\\n\\Y ={}& \\X \\bv + \\resv.\n\\end{align*}\n\\tag{4}\\]\nIn the case of simple least squares, we can write\n\\[\n\\begin{align*}\n\\X :=\n\\begin{pmatrix}\n  1 & \\x_{1}\\\\\n  1 & \\x_{2}\\\\\n  \\vdots & \\vdots\\\\\n  1 & \\x_{N}\\\\\n\\end{pmatrix},\n\\end{align*}\n\\tag{5}\\]\nand verify that the \\(n\\)–th row of Equation 4 is the same as Equation 1.\n\n\nLeast squares in matrix notation\nUsing our tidy expression Equation 4, we can easily write out the sum of the squared errors as\n\\[\n\\begin{align*}\n\\sumn \\res_n^2 =\n    \\resv^\\trans \\resv = (\\Y - \\X \\bv)^\\trans (\\Y - \\X \\bv).\n\\end{align*}\n\\]\nThis is a function of the vector \\(\\bv\\). We wish to find the minimum of this quantity as a function of \\(\\bv\\). My might hope that the minimum occurs at a point where the gradient of this expression is zero. Rather than compute the univariate derivative with respect to each component, we can compute the multivariate gradient with respect to the vector.\nLet’s recall some facts from vector calculus.\n\n\n\n\n\n\nNotation\n\n\n\nTake \\(\\z \\in \\mathbb{R}^P\\) to be a \\(P\\)–vector. and let \\(\\mybold{f}(\\z) \\in \\mathbb{R}^Q\\) denote a \\(Q\\)–vector. We write\n\\[\n\\frac{\\partial \\mybold{f}}{\\partial \\zv^\\trans}  =\n\\begin{pmatrix}\n\\frac{\\partial}{\\partial \\z_1} f_1(\\z) & \\ldots &\n    \\frac{\\partial}{\\partial \\z_P} f_1(\\zv) \\\\\n    & \\vdots & \\\\\n\\frac{\\partial}{\\partial \\z_1} f_Q(\\zv) & \\ldots &\n    \\frac{\\partial}{\\partial \\z_P} f_Q(\\zv)\n\\end{pmatrix}.\n\\]\nThat is, the partial \\(\\partial \\mybold{f} / \\partial \\zv^\\trans\\) is a \\(Q \\times P\\) matrix with components of \\(\\mybold{f}\\) in the rows and components of the derivative in the columns. This matrix is called the “Jacobian matrix” of the function \\(\\mybold{f}(\\zv)\\).\nNote that many authors omit the transpose in the denominator of the partial derivative, but I will try to do so to emphasize the dimension of the output.\nI will also sometimes write\n\\[\n\\frac{\\partial \\mybold{f}^\\trans}{\\partial \\zv}\n=\n\\left(\n    \\frac{\\partial \\mybold{f}}{\\partial \\zv^\\trans}\n\\right)^\\trans.\n\\]\nWhen \\(Q = 1\\) and \\(f\\) is a scalar, I will often write\n\\[\n\\frac{\\partial f}{\\partial \\zv} =\n\\begin{pmatrix}\n\\frac{\\partial}{\\partial \\zv_1} f(\\zv) \\\\\n    \\vdots  \\\\\n    \\frac{\\partial}{\\partial \\zv_P} f(\\zv)\n\\end{pmatrix}.\n\\]\n\n\nRecall a couple rules from vector calculus:\n\\[\n\\begin{align*}\n\\frac{\\partial}{\\partial \\zv} \\zv^\\trans \\zv = 2 \\zv\n\\quad\\textrm{and}\\quad\n\\frac{\\partial}{\\partial \\zv^\\trans} \\mybold{A} \\zv = \\mybold{A}\n\\quad\\textrm{and}\\quad\n\\frac{\\partial}{\\partial \\zv} f(\\mybold{g}(\\zv)) =\n    \\frac{\\partial \\mybold{g}^\\trans}{\\partial \\zv} \\frac{\\partial f}{\\partial \\mybold{g}}\n     \\quad\n    \\textrm{($f$ is scalar-valued and $\\mybold{g}$ is vector-valued)}\n\\end{align*}\n\\]\n\n\n\n\n\n\nExercise\n\n\n\nProve these results above using univariate derivatives and our stacking convention.\n\n\nBy the chain rule, we then get\n\\[\n\\begin{align*}\n\\frac{\\partial}{\\partial \\bv} \\resv^\\trans \\resv ={}&\n2 \\frac{\\partial \\resv^\\trans}{\\partial \\bv}  \\resv  \\\\\n={}& 2 \\frac{\\partial (\\Y - \\X \\bv)^\\trans}{\\partial \\bv}  (\\Y - \\X \\bv)  \\\\\n={}& -2 \\X ^\\trans (\\Y - \\X \\bv) \\\\\n={}& -2 \\X^\\trans \\Y + 2  \\X^\\trans \\X \\bv.\n\\end{align*}\n\\]\nAssuming our estimator \\(\\bhat\\) sets these partial derivatives are equal to zero, we then get\n\\[\n\\begin{align*}\n\\X^\\trans \\X \\bvhat ={}& \\X^\\trans \\Y.\n\\end{align*}\n\\tag{6}\\]\nThis is a set of \\(P\\) equations in \\(P\\) unknowns. If it is not degenerate, one can solve for \\(\\bvhat\\). That is, if the matrix \\(\\X^\\trans \\X\\) is invertible, then we can multiply both sides of Equation 6 by \\((\\X^\\trans \\X)^{-1}\\) to get\n\\[\n\\bvhat = (\\X^\\trans \\X)^{-1} \\X^\\trans \\Y\n\\]\n\n\n\n\n\n\nNotation\n\n\n\nI will use \\(\\onev\\) to denote a vector full of ones. Usually it will be a \\(P\\)–vector, but sometimes its dimension will just be implicit. Similarly, \\(\\zerov\\) is a vector of zeros.\n\n\nIndeed, by plugging Equation 5 into @ols-est-eq, we get\n\\[\n\\X^\\trans \\X =\n\\begin{pmatrix}\n1 & \\ldots & 1 \\\\\nx_1 & \\ldots & x_N \\\\\n\\end{pmatrix}\n\\begin{pmatrix}\n  1 & \\x_{1}\\\\\n  \\vdots & \\vdots\\\\\n  1 & \\x_{N}\\\\\n\\end{pmatrix} =\n\\begin{pmatrix}\n\\onev^\\trans \\onev  & \\onev^\\trans \\xv \\\\\n\\xv^\\trans \\onev  & \\xv^\\trans \\xv \\\\\n\\end{pmatrix}\n=\nN\n\\begin{pmatrix}\n1  & \\overline{x} \\\\\n\\overline{x}  & \\overline{xx} \\\\\n\\end{pmatrix} \\\\\n%\n\\]\nand\n\\[\n\\X^\\trans \\Y =\n\\begin{pmatrix}\n1 & \\ldots & 1 \\\\\nx_1 & \\ldots & x_N \\\\\n\\end{pmatrix}\n\\begin{pmatrix}\n  \\y_{1}\\\\\n  \\vdots\\\\\n  \\y_{N}\\\\\n\\end{pmatrix} =\nN\n\\begin{pmatrix}\n\\overline{y} \\\\\n\\overline{xy}\n\\end{pmatrix}.\n\\]\nCanceling \\(N\\) shows that Equation 6 is the same as Equation 2.\n\n\nWhat if the matrix is not invertible?\nI’ll end with a short note on what happens with simmple linear regression if \\(\\overline{xx} - \\overline{x}^2 = 0\\). Recall that if \\(\\overline{xx} - \\overline{x}^2 = 0\\) then the matrix in Equation 6 is not invertible.\n\n\n\n\n\n\nExercise\n\n\n\nProve that \\(\\overline{xx} - \\overline{x}^2 = 0\\) means \\(\\x_n\\) is a constant. Hint: look at the sample variance of \\(\\x_n\\).\n\n\nFor simplicity, let’s take \\(\\x_n = 1\\). In that case we can rewrite our estimating equation as\n\\[\n\\y_n = \\beta_1 + \\beta_2 \\x_n + \\res_n\n     = (\\beta_1 + \\beta_2) + \\res_n.\n\\]\nNote that there are an infinite number of combinations \\(\\beta_1\\) and \\(\\beta_2\\) that give exactly the same regression line. For example, if I take\n\\[\n\\beta_1' = \\beta_1 - 5\n\\quad\\textrm{and}\\quad\n\\beta_2' = \\beta_2 + 5\n\\]\nthen\n\\[\n\\y_n = (\\beta_1 + \\beta_2) + \\res_n\n     = (\\beta_1' + 5 + \\beta_2' - 5) + \\res_n\n     = (\\beta_1' + \\beta_2') + \\res_n,\n\\]\neven though \\(\\beta_1 \\ne \\beta_1'\\) and \\(\\beta_2 \\ne \\beta_2'\\). We cannot possibly hope to find a unique least squares solution — even though the expressivity of the line we are able to fit is unchanged.\nIn that case,\n\\[\n\\begin{align*}\n\\overline{x} ={}& \\meann 1 = 1 \\\\\n\\overline{xx} ={}& \\meann 1^2 = 1 \\\\\n\\overline{xy} ={}& \\meann 1 \\y_n = \\overline{y},\n\\end{align*}\n\\]\nand we see that our system of equations is\n\\[\n\\begin{pmatrix}\n1  & \\overline{x} \\\\\n\\overline{x} & \\overline{xx}\n\\end{pmatrix}\n\\begin{pmatrix}\n\\beta_1 \\\\ \\beta_2\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n1  & 1 \\\\\n1 &  1\n\\end{pmatrix}\n\\begin{pmatrix}\n\\beta_1 \\\\ \\beta_2\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n\\overline{y} \\\\ \\overline{y}\n\\end{pmatrix}\n\\]\nThe degeneracy we noticed before manifests in linear algebra form by noticing that\n\\[\n\\begin{pmatrix}\n1  & 1 \\\\\n1 &  1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 \\\\ -1\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n1  -1 \\\\ 1 - 1\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n0 \\\\ 0\n\\end{pmatrix}\n\\]\nso that\n\\[\n\\begin{pmatrix}\n1  & 1 \\\\\n1  & 1 \\\\\n\\end{pmatrix}\n\\begin{pmatrix}\n\\beta_1 + 5\\\\ \\beta_2 - 5\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n1  & 1 \\\\\n1  & 1 \\\\\n\\end{pmatrix}\n\\begin{pmatrix}\n\\beta_1\\\\ \\beta_2\n\\end{pmatrix}\n+ 5\n\\begin{pmatrix}\n1  & 1 \\\\\n1  & 1 \\\\\n\\end{pmatrix}\n\\begin{pmatrix}\n1\\\\ -1\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n1  & 1 \\\\\n1  & 1 \\\\\n\\end{pmatrix}\n\\begin{pmatrix}\n\\beta_1\\\\ \\beta_2\n\\end{pmatrix}.\n\\]\nIn other words, the fact that the matrix \\(\\X^\\trans \\X\\) maps a non-zero vector to zero results in the non-existence of the OLS solution. This will turn out to be very general, and only one of the ways in which the structure of \\(\\X^\\trans \\X\\) will reveal a lot about the behavior of the OLS estimate and fit."
  },
  {
    "objectID": "lectures/Lecture6.html",
    "href": "lectures/Lecture6.html",
    "title": "Transformations of regressors: Some payoffs from the linear algebra perspective.",
    "section": "",
    "text": "\\(\\LaTeX\\)"
  },
  {
    "objectID": "lectures/Lecture6.html#linear-combinations-of-variables-in-simple-least-squares",
    "href": "lectures/Lecture6.html#linear-combinations-of-variables-in-simple-least-squares",
    "title": "Transformations of regressors: Some payoffs from the linear algebra perspective.",
    "section": "Linear combinations of variables in simple least squares",
    "text": "Linear combinations of variables in simple least squares\nTo answer question 1, let’s look at a slightly simpler example, where we perform simple least squares on heigh.\n\nreg_height &lt;- lm(bodyfat ~ Height, bodyfat_df)\nprint(reg_height$coefficients)\n\n(Intercept)      Height \n 33.4944938  -0.2044753 \n\nprint(sprintf(\"Error: %f\", mean(reg_height$residuals^2)))\n\n[1] \"Error: 69.199176\"\n\nreg_height_norm &lt;- lm(bodyfat ~ height_norm, bodyfat_df)\nprint(reg_height_norm$coefficients)\n\n(Intercept) height_norm \n 19.1507937  -0.7489636 \n\nprint(sprintf(\"Error: %f\", mean(reg_height_norm$residuals^2)))\n\n[1] \"Error: 69.199176\"\n\n\nWhy do these two have different coefficients, but the same fit? The answer comes from our projection result. Let’s let \\(\\x_n = \\textrm{Height}_n\\), and \\(\\z_n = \\textrm{height\\_norm}_n\\). Recall that R includes a constant in the regression by default, so our two regressions are:\n\\[\n\\begin{aligned}\n\\textrm{height: } && \\textrm{height\\_norm} \\\\\n\\y_n = \\beta_0 + \\beta_1 \\x_n + \\res_n &&\n\\y_n = \\gamma_0 + \\gamma_1 \\z_n + \\nu_n.\n\\end{aligned}\n\\]\nWhat’s the relationship between these two regressions? Well, taking \\(\\overline{x} := \\meann \\x_n\\) and \\(\\sigmahat_x := \\sqrt{\\meann (\\x_n - \\overline{x})^2}\\). In our case, \\(\\sigmahat_x &gt; 0\\), so we’ve set\n\\[\n\\z_n = \\frac{\\x_n - \\overline{x}}{\\sigmahat_x} =\n  \\frac{1}{\\sigmahat_x} \\x_n - \\frac{\\overline{x}}{\\sigmahat_x}.\n\\tag{1}\\]\nThat means we can write\n\\[\n\\begin{aligned}\n\\gamma_0 + \\gamma_1 \\z_n + \\nu_n ={}&\n\\gamma_0 + \\gamma_1 \\left( \\frac{1}{\\sigmahat_x} \\x_n -\n  \\frac{\\overline{x}}{\\sigmahat_x} \\right) + \\nu_n  \\\\\n={}&\n\\left(\\gamma_0 - \\frac{\\overline{x}}{\\sigmahat_x} \\gamma_1 \\right)  +\n   \\left( \\frac{\\gamma_1}{\\sigmahat_x}\\right) \\x_n  + \\nu_n.\n\\end{aligned}\n\\]\nBy identifying\n\\[\n\\gamma_0 - \\frac{\\overline{x}}{\\sigmahat_x} \\gamma_1 = \\beta_0 \\quad\\textrm{and}\\quad\n\\frac{\\gamma_1}{\\sigmahat_x} = \\beta_1,\n\\]\nwe see that the two regressions are exactly the same! From this two conclusions follow:\n\nIt is impossible for you to get a better fit with one than the other.\nIn general the coefficients will be different.\n\nIn fact, we can write down the rule to convert between the two. Let’s check that it works:\n\nxbar &lt;- mean(bodyfat_df$Height)\nsigmahat &lt;- sd(bodyfat_df$Height)\ngammahat_0 &lt;- reg_height_norm$coefficients[\"(Intercept)\"]\ngammahat_1 &lt;- reg_height_norm$coefficients[\"height_norm\"]\nbetahat_0 &lt;- reg_height$coefficients[\"(Intercept)\"]\nbetahat_1 &lt;- reg_height$coefficients[\"Height\"]\n\nprint(\"Intercept: \")\n\n[1] \"Intercept: \"\n\ncat(betahat_0, \" = \", gammahat_0 - gammahat_1 * xbar / sigmahat, \"\\n\")\n\n33.49449  =  33.49449 \n\ncat(betahat_1, \" = \", gammahat_1  / sigmahat, \"\\n\")\n\n-0.2044753  =  -0.2044753"
  },
  {
    "objectID": "lectures/Lecture6.html#linear-combinations-of-variables-in-matrix-form",
    "href": "lectures/Lecture6.html#linear-combinations-of-variables-in-matrix-form",
    "title": "Transformations of regressors: Some payoffs from the linear algebra perspective.",
    "section": "Linear combinations of variables in matrix form",
    "text": "Linear combinations of variables in matrix form\nTo extend what we just did, let’s put our result in matrix notation. First, write\n\\[\n\\xv_n = \\begin{pmatrix}\n1 \\\\ \\x_n\n\\end{pmatrix}\n\\quad\\textrm{and}\\quad\n\\zv_n = \\begin{pmatrix}\n1 \\\\ \\z_n\n\\end{pmatrix}.\n\\]\nIn this notation, we can write Equation 1 as\n\\[\n\\zv_n =\n\\begin{pmatrix}\n1 & 0 \\\\\n-\\frac{\\overline{x}}{\\sigmahat_x} & \\frac{1}{\\sigmahat_x}\n\\end{pmatrix}\n\\xv_n\n=: \\A \\xv_n.\n\\]\nWe can see that \\(\\A\\) is invertible whenever \\(\\sigmahat_x &gt; 0\\). Using the matrix \\(\\A\\), we can write \\(\\Z = \\X \\A^\\trans\\), so\n\\[\n\\Y = \\Z \\gamma + \\etav =\n\\X \\A^\\trans \\gamma + \\etav =\n\\X  \\beta + \\resv,\n\\]\nwhich gives\n\\[\n\\etav = \\resv\n\\quad\\Leftrightarrow \\quad\n\\A^\\trans \\gamma =  \\beta\n\\quad\\Leftrightarrow \\quad\n\\gamma = (\\A^\\trans)^{-1} \\beta\n.\n\\]\nWe can confirm that this condition does indeed hold at the optimum of each regression:\n\na_mat = matrix(NA, 2, 2)\na_mat[1,1] &lt;- 1\na_mat[1,2] &lt;- 0\na_mat[2,1] &lt;- -xbar / sigmahat\na_mat[2,2] &lt;- 1 / sigmahat\nprint(t(a_mat) %*% reg_height_norm$coefficients %&gt;% as.numeric())\n\n[1] 33.4944938 -0.2044753\n\nprint(reg_height$coefficients)\n\n(Intercept)      Height \n 33.4944938  -0.2044753 \n\n\nNote that we were able to do this only because we included an intercept in the regression! In fact, we can show that we get different fits if we don’t include the intercept:\n\nreg_height_noint &lt;- lm(bodyfat ~ Height - 1, bodyfat_df)\nprint(sprintf(\"Error: %f\", mean(reg_height_noint$residuals^2)))\n\n[1] \"Error: 72.237550\"\n\nreg_height_norm_noint &lt;- lm(bodyfat ~ height_norm - 1, bodyfat_df)\nprint(sprintf(\"Error: %f\", mean(reg_height_norm_noint$residuals^2)))\n\n[1] \"Error: 435.952073\""
  },
  {
    "objectID": "lectures/Lecture6.html#linear-combinations-of-variables-in-general",
    "href": "lectures/Lecture6.html#linear-combinations-of-variables-in-general",
    "title": "Transformations of regressors: Some payoffs from the linear algebra perspective.",
    "section": "Linear combinations of variables in general",
    "text": "Linear combinations of variables in general\nNote that the argument which we made in the special case above actually holds in general. Let’s go to \\(P\\)–dimensional regression, but otherwise retaining the notation \\(\\y_n \\sim \\z_n^\\trans\\gamma\\) and \\(\\y_n \\sim \\x_n^\\trans \\beta\\). If we can find an invertible \\(\\A\\) such that \\(\\z_n = \\A \\x_n\\), then we still have\n\\[\n\\Y = \\Z \\gamma + \\etav =\n\\X \\A^\\trans \\gamma + \\etav =\n\\X  \\beta + \\resv,\n\\]\n\\[\n\\etav = \\resv\n\\quad\\Leftrightarrow \\quad\n\\A^\\trans \\gamma =  \\beta\n\\quad\\Leftrightarrow \\quad\n\\gamma = (\\A^\\trans)^{-1} \\beta\n.\n\\]\nHow can we recognize a linear transformation from \\(\\x_n\\) to \\(\\z_n\\)?\nIt’s enough for each entry of \\(\\z_n\\) to be a linear transform \\(\\z_{np}= \\a_p^\\trans \\x_n\\), since we can then just stack the \\(\\a_p^\\trans\\) vectors to form \\(\\A\\).\n\nLinear transformations of \\(\\x_n\\) always look like \\(\\z_{np} = \\a_{p1} \\x_{n1} + \\ldots \\a_{pP} \\x_{nP}\\).\nEntries that are unchanged are always the (trivial) identity linear transformation \\(\\a_{p} = (0, 0, \\ldots, 0, 1, 0, \\ldots, 0)\\)\n\nNote that adding a constant is an affine, not a linear transformation. However, it can be a linear transformation if your model includes an intercept — or if some sum of the entries of \\(\\x_n\\) is always a constant.\nNot that it is not always easy to see whether a linear transformation is invertible! We will talk about that problem shortly.\nIn this way, one can see that the normalization of Question 1 is a linear transformation."
  },
  {
    "objectID": "lectures/Lecture6.html#linear-transformations-and-column-spans",
    "href": "lectures/Lecture6.html#linear-transformations-and-column-spans",
    "title": "Transformations of regressors: Some payoffs from the linear algebra perspective.",
    "section": "Linear transformations and column spans",
    "text": "Linear transformations and column spans\nFinally, recall our projection result that states\n\\[\n\\Yhat = \\proj{\\S_\\X} \\Y = \\X (\\X^\\trans \\X)^{-1} \\X^\\trans \\Y,\n\\]\nwhere \\(\\S_\\X\\) is the space of linear combinations of the columns of \\(\\X\\). If \\(\\A\\) is invertible, then the column span of \\(\\Z = \\X \\A^\\trans\\) is equal to the column span of \\(\\X\\). Consequently, a regression on an invertible linear combination of regressors cannot affect the fit.\nAlthough this intuition is clear enough if you’re comfortable with linear algebra, you can also check directly that\n\\[\n\\proj{\\S_\\Z} \\Y =\n\\Z (\\Z^\\trans \\Z)^{-1} \\Z^\\trans \\Y =\n\\X \\A^\\trans (\\A \\X^\\trans \\X \\A^\\trans)^{-1} \\A \\X^\\trans \\Y =\n\\X \\A^\\trans (\\A^\\trans)^{-1} (\\X^\\trans \\X)^{-1} \\A^{-1} \\A \\X^\\trans \\Y =\n\\X (\\X^\\trans \\X)^{-1} \\X^\\trans \\Y =\n\\proj{\\S_\\X} \\Y.\n\\]"
  },
  {
    "objectID": "lectures/Lecture6.html#redundant-variables-in-simple-regression",
    "href": "lectures/Lecture6.html#redundant-variables-in-simple-regression",
    "title": "Transformations of regressors: Some payoffs from the linear algebra perspective.",
    "section": "Redundant variables in simple regression",
    "text": "Redundant variables in simple regression\nOnce again, it will be useful to start with a simpler example. Suppose you have a regression \\(\\y_n \\sim \\xv_n^\\trans \\beta\\), with \\(\\xv_n = (1, \\x_n)^\\trans\\), where \\(\\sigmahat_x &gt; 0\\) (as defined above). Now suppose you want to run a new regression \\(\\y_n \\sim \\z_n^\\trans \\gamma\\) with\n\\[\n\\zv_n =\n\\begin{pmatrix}\n1 \\\\\n\\x_n \\\\\n\\x_n - 1\n\\end{pmatrix}.\n\\]\nNote that the new regression is the same as\n\\[\n\\begin{aligned}\n\\y_n ={}& \\gamma_1 + \\gamma_2 \\x_n + \\gamma_3 (\\x_n - 1) + \\eta_n \\\\\n={}& (\\gamma_1 - \\gamma_3) + (\\gamma_2 + \\gamma_3) \\x_n +  \\eta_n \\\\\n={}& \\beta_1 + \\beta_2 \\x_n +  \\res_n.\n\\end{aligned}\n\\]\nWe achieve the same fit — \\(\\res_n = \\eta_n\\) for all \\(n\\) — whenever\n\\[\n\\gamma_1 - \\gamma_3 = \\beta_1\n\\quad\\textrm{and}\\quad\n\\gamma_2 + \\gamma_3 = \\beta_2.\n\\]\nBy the arguments above, the two regressions must have the same optimal fit. But in this case, there are actually a whole infinite dimensional set of \\(\\gammav\\) that correspond to each \\(\\bv\\). In particular, for any \\(a\\), we can take\n\\[\n\\begin{aligned}\n\\gamma_1 &\\rightarrow \\gamma_1 + a \\\\\n\\gamma_2 &\\rightarrow \\gamma_2 - a \\\\\n\\gamma_3 &\\rightarrow \\gamma_3 + a,\n\\end{aligned}\n\\]\nand achieve exactly the same fit. In other words, the optimal fit \\(\\Yhat\\) is the same for the two regressions, but the optimal parameter\n\\[\n\\gammahat := \\argmin{\\gamma} \\meann \\eta_n^2\n\\]\nis not uniquely defined — there is a whole family of coefficients that acheive the same optimal fit."
  },
  {
    "objectID": "lectures/Lecture6.html#redundant-variables-in-matrix-form",
    "href": "lectures/Lecture6.html#redundant-variables-in-matrix-form",
    "title": "Transformations of regressors: Some payoffs from the linear algebra perspective.",
    "section": "Redundant variables in matrix form",
    "text": "Redundant variables in matrix form\nHow can we understand this in matrix form? In this case, we can write the third element of the \\(\\zv_n\\) regressor as a linear combination of the other two:\n\\[\n\\zv_{n3} = \\x_n - 1 = \\zv_{n2} - \\zv_{n1}\n\\quad\\Leftrightarrow\\quad\n\\zv_{n3} - \\zv_{n2} + \\zv_{n1}  = 0\n\\quad\\Leftrightarrow\\quad\n\\zv_n^\\trans\n\\begin{pmatrix}\n1 \\\\\n-1 \\\\\n1\n\\end{pmatrix} =: \\zv_n^\\trans \\vv = 0.\n\\]\nSince this is true for every row, we have that \\(\\Z \\vv = \\zerov\\) as well, and so\n\\[\n\\vv^\\trans (\\Z^\\trans \\Z) \\vv = 0.\n\\]\nIn other words, \\(\\vv\\) is a non-zero vector in the nullspace of \\(\\Z^\\trans \\Z\\). It follows that \\(\\Z^\\trans \\Z\\) is not invertible, and the OLS coefficient \\((\\Z^\\trans\\Z)^{-1} \\Z^\\trans \\Y\\) is not defined!\nBut that does not prevent us from finding the optimal projection. That is, we can still find\n\\[\n\\textrm{Well-defined: }\\quad\n\\min_{\\gamma} \\norm{\\Y - \\Z \\gamma}_2^2\n\\quad\\quad\\quad\n\\quad\\quad\\quad\n\\textrm{Ill-defined: }\\quad\n\\argmin{\\gamma} \\norm{\\Y - \\Z \\gamma}_2^2.\n\\]\nSpecifically,\n\\[\n\\min_{\\gamma} \\norm{\\Y - \\Z \\gamma}_2^2 = \\norm{(\\id - \\proj{\\S_\\Z}) \\Y}_2^2\n\\]\nis the norm of the projection perpendicular to the space spanned by the columns of \\(\\Z\\), it’s just that this space is two-dimensional, not three-dimensional."
  },
  {
    "objectID": "lectures/Lecture6.html#in-r",
    "href": "lectures/Lecture6.html#in-r",
    "title": "Transformations of regressors: Some payoffs from the linear algebra perspective.",
    "section": "In R",
    "text": "In R\nIt turns out that R does not actually estimate the OLS fit by forming \\((\\X^\\trans \\X)^{-1} \\X^\\trans \\Y\\). It uses an iterative procedure that is roughly similar to Gaussian elimination to estimate one component at a time. When it gets to a component that cannot be estimated beacuse \\(\\X^\\trans \\X\\) has a non-trivial nullspace, then the fit terminates, and it reports the values for the coefficients estimated up to that point, with NA for the rest.\nIn our example, the difference hw_diff is a linear combination of height_norm and weight_norm. Thus the regressors have a non-trivial nullspace, and the best fit \\(\\Yhat\\) is defined even though the regressors are not."
  },
  {
    "objectID": "lectures/Lecture8.html",
    "href": "lectures/Lecture8.html",
    "title": "Vector and matrix-valued statistics and limit theorems.",
    "section": "",
    "text": "\\(\\LaTeX\\)"
  },
  {
    "objectID": "lectures/Lecture8.html#the-bivariate-normal-distribution",
    "href": "lectures/Lecture8.html#the-bivariate-normal-distribution",
    "title": "Vector and matrix-valued statistics and limit theorems.",
    "section": "The bivariate normal distribution",
    "text": "The bivariate normal distribution\nSuppose that \\(\\RV{\\u}_1\\) and \\(\\RV{\\u}_2\\) are independent standard normal random variables. Suppose we define the new random variables\n\\[\n\\begin{aligned}\n\\RV{\\x_1} :={}& a_{11} \\RV{\\u}_1 + a_{12} \\RV{\\u}_2 \\\\\n\\RV{\\x_2} :={}& a_{21} \\RV{\\u}_1 + a_{22} \\RV{\\u}_2.\n\\end{aligned}\n\\]\nWe can see that \\(\\RV{\\x_1}\\) and \\(\\RV{x_2}\\) are each normal random variables, and we can compute their means and variances:\n\\[\n\\begin{aligned}\n\\expect{\\RV{\\x_1}} :={}& a_{11} \\expect{\\RV{\\u}_1} + a_{12} \\expect{\\RV{\\u}_2} = 0 \\\\\n\\expect{\\RV{\\x_2}} :={}& a_{21} \\expect{\\RV{\\u}_1} + a_{22} \\expect{\\RV{\\u}_2} = 0 \\\\\n\\var{\\RV{\\x_1}} :={}& a_{11}^2 \\var{\\RV{\\u}_1} + a_{12}^2 \\var{\\RV{\\u}_2} = a_{11}^2 + a_{12}^2 \\\\\n\\var{\\RV{\\x_2}} :={}& a_{21}^2 \\var{\\RV{\\u}_1} + a_{22}^2 \\var{\\RV{\\u}_2} = a_{21}^2 + a_{22}^2.\n\\end{aligned}\n\\]\nBut in general \\(\\RV{\\x_1}\\) and \\(\\RV{x_2}\\) are not independent. If they were, we would have \\(\\expect{\\RV{\\x_1} \\RV{\\x_2}} = \\expect{\\RV{\\x_1}} \\expect{\\RV{\\x_2}} = 0\\), but in fact we have\n\\[\n\\expect{\\RV{\\x_1} \\RV{\\x_2}} =\n\\expect{(a_{11} \\RV{\\u}_1 + a_{12} \\RV{\\u}_2)(a_{21} \\RV{\\u}_1 + a_{22} \\RV{\\u}_2)} =\na_{11} a_{21} \\expect{\\RV{\\u}_1^2} + a_{12} a_{22} \\expect{\\RV{\\u}_2^2} =\na_{11} a_{21} + a_{12} a_{22}.\n\\]\nThe variables \\(\\RV{\\x_1}\\) and \\(\\RV{x_2}\\) are instances of the bivariate normal distribution, which is the two-dimensional analogue of the normal distribution. One can define the bivariate normal distribution in many ways. Here, we have defined it by taking linear combinations of independent univariate normal distributions. It turns out this is always possible, and for the purposes of this class, we will see that it is enough to use such a definition.\nThe properties we derived above can in fact be represented more succinctly in vector notation. We can write\n\\[\n\\RV{\\xv} =\n\\begin{pmatrix}\n\\RV{\\x_1} \\\\\n\\RV{\\x_2} \\\\\n\\end{pmatrix} =\n\\begin{pmatrix}\na_{11} & a_{12} \\\\\na_{21} & a_{22} \\\\\n\\end{pmatrix}\n\\begin{pmatrix}\n\\RV{\\u}_1 \\\\\n\\RV{\\u}_2 \\\\\n\\end{pmatrix} =:\n\\A \\RV{\\uv}.\n\\]\nNote that the matrix \\(\\A\\) is not random. Defining the expectation of a vector to be the vector of expectations of its entries, we get\n\\[\n\\expect{\\RV{\\xv}} = \\A \\expect{\\RV{\\uv}} = \\A \\zerov = \\zerov,\n\\]\njust as above.\nDefining the “variance” of \\(\\RV{\\xv}\\) is more subtle. Recall that a normal distribution is fully characterized by its variance. We would like this to be the case for the bivariate normal as well. But for this it is not enough to know the marginal varianecs \\(\\var{\\RV{\\x_1}}\\) and \\(\\var{\\RV{\\x_2}}\\), since the “covariance” \\(\\cov{\\RV{\\x_1}, \\RV{\\x_2}}\\) is also very important for the behavior of the random variable.\n\n\n\n\n\n\nNotation\n\n\n\nWhen dealing with two scalar– or vector–valued random variables, I will write the covariance as a function of two arguments, e.g., \\(\\cov{\\RV{\\x_1}, \\RV{\\x_2}}\\). However, when speaking of only a single random variable I might write \\(\\cov{\\RV{\\xv}}\\) as a shorthand for the covariance of a vector with itself, e.g., \\(\\cov{\\RV{\\xv}} = \\cov{\\RV{\\xv}, \\RV{\\xv}}\\). I will try to reserve the variance \\(\\var{\\RV{\\x}}\\) for only the variance of a single scalar random variable.\n\n\nA convenient way to write all the covariances in a single expression is to define\n\\[\n\\begin{aligned}\n\\cov{\\RV{\\xv}} ={}&\n  \\expect{\\left(\\RV{\\xv} - \\expect{\\RV{\\xv}} \\right)\n          \\left(\\RV{\\xv} - \\expect{\\RV{\\xv}} \\right)^\\trans}\n          \\\\={}&\n  \\expect{\n    \\begin{pmatrix}\n      (\\RV{\\x_1} - \\expect{\\RV{\\x_1}})^2 &\n        (\\RV{\\x_1} - \\expect{\\RV{\\x_1}})(\\RV{\\x_2} - \\expect{\\RV{\\x_2}}) \\\\\n      (\\RV{\\x_1} - \\expect{\\RV{\\x_1}})(\\RV{\\x_2} - \\expect{\\RV{\\x_2}}) &\n        (\\RV{\\x_2} - \\expect{\\RV{\\x_2}})^2\n    \\end{pmatrix}\n  }\n          \\\\={}&\n  \\begin{pmatrix}\n  \\var{\\RV{\\x_1}} & \\cov{\\RV{\\x_1}, \\RV{\\x_2}} \\\\\n  \\cov{\\RV{\\x_1}, \\RV{\\x_2}} & \\var{\\RV{\\x_2}}\n  \\end{pmatrix}.\n\\end{aligned}\n\\]\nNote that the dimension of the matrix inside the expectation is \\(2 \\times 2\\), since we take the transpose on the left. By expanding, we see that each entry of this “covariance matrix” has the covariance between two entries of the vector, and the diagonal contains the “marginal” variances.\nThis expression in fact allows quite convenient calculation of all the covariances above, since\n\\[\n\\begin{aligned}\n\\cov{\\RV{\\xv}} ={}&\n\\expect{\\A \\RV{\\uv} \\RV{\\uv}^\\trans \\A^\\trans}\n\\\\={}&\n\\A  \\expect{\\RV{\\uv} \\RV{\\uv}^\\trans } \\A^\\trans\n\\\\={}&\n\\A  \\id \\A^\\trans\n\\\\={}&\n\\A \\A^\\trans.\n\\end{aligned}\n\\]\nYou can readily verify that the expression matches the ones derived manually above."
  },
  {
    "objectID": "lectures/Lecture8.html#the-multivariate-normal-distribution",
    "href": "lectures/Lecture8.html#the-multivariate-normal-distribution",
    "title": "Vector and matrix-valued statistics and limit theorems.",
    "section": "The multivariate normal distribution",
    "text": "The multivariate normal distribution\nWe can readily generalize the previous section to \\(P\\)–dimensional vectors. Let \\(\\RV{\\uv}\\) denote a vector of \\(P\\) standard normal random variables. Then define\n\\[\n\\RV{\\xv} := \\A \\RV{\\uv} + \\muv.\n\\]\nThen we say that \\(\\RV{\\xv}\\) is a multivariate normal random variable with mean\n\\[\n\\expect{\\RV{\\xv}} = \\A \\expect{\\RV{\\uv}} + \\muv = \\muv\n\\]\nand\n\\[\n\\cov{\\RV{\\xv}} =\n\\expect{(\\RV{\\xv} - \\muv)(\\RV{\\xv} - \\muv)^\\trans} =\n\\expect{(\\A \\RV{\\uv})(\\A \\RV{\\uv})^\\trans} =\n\\A \\A^\\trans,\n\\]\nwriting\n\\[\n\\RV{\\xv} \\sim \\gauss{\\muv, \\A \\A^\\trans}.\n\\]\nSuppose we want to design a multivariate normal with a given covariance matrix \\(\\Sigmam\\). If we require that \\(\\Sigmam\\) be positive semi-definite (see exercise), the we can take \\(\\A = \\Sigmam^{1/2}\\), giving the following definition:\n\n\n\n\n\n\nNotation\n\n\n\nI will write \\(\\RV{\\xv} \\sim \\gauss{\\muv, \\Sigmam}\\) to mean that \\(\\RV{\\xv}\\) is a multivariate normal random variable with mean \\(\\muv\\) and covariance matrix \\(\\Sigmam\\).\n\n\nNote that we will not typically go through the construction \\(\\RV{\\xv} = \\Sigmam^{1/2} \\RV{\\uv}\\) — we’ll take for granted that we can do so. The construction in terms of univariate random variables is simply an easy way to define multivariate random variables without having to deal with multivariate densities.\n\n\n\n\n\n\nExercise\n\n\n\nShow that if you have a vector-valued random variable with a non positive semi-definite covariance matrix, you can construct a univariate random variable with negative variance, which is impossible. It follows that every vector covariance must be postive semi-definite.\n\n\nA few useful properties come out immediately from properties of the univariate normal distribution:\n\nThe entries of a multivariate normal random vector are independent if an only if the covariance matrix is diagonal.\nAny linear combination of a multivariate normal random variable is itself multivariate normal (possibly with different dimension).\n\\(\\prob{\\RV{\\xv} \\in S} = \\prob{\\RV{\\uv} \\in \\{\\uv: \\A \\uv \\in S\\}}\\)"
  },
  {
    "objectID": "lectures/Lecture8.html#generic-random-vectors",
    "href": "lectures/Lecture8.html#generic-random-vectors",
    "title": "Vector and matrix-valued statistics and limit theorems.",
    "section": "Generic random vectors",
    "text": "Generic random vectors\nIn general, we can consider a random vector — or a random matrix — as a collection of potentially non-independent random values.\nFor such a vector \\(\\RV{\\xv} \\in \\rdom{P}\\), we can speak about its expectation and covariance just as we would for a multivariate normal distribution. Specifically,\n\\[\n\\expect{\\RV{\\xv}} =\n\\begin{pmatrix}\n\\expect{\\RV{\\x}_1} \\\\\n\\vdots \\\\\n\\expect{\\RV{\\x}_P} \\\\\n\\end{pmatrix}\n\\quad\\textrm{and}\\quad\n\\cov{\\RV{\\xv}} =\n\\expect{\\left(\\RV{\\xv} - \\expect{\\RV{\\xv}} \\right)\n        \\left(\\RV{\\xv} - \\expect{\\RV{\\xv}} \\right)^\\trans} =\n\\begin{pmatrix}\n\\var{\\RV{\\x_1}} & \\cov{\\RV{\\x_1}, \\RV{\\x_2}} & \\ldots & \\cov{\\RV{\\x_1}, \\RV{\\x_P}} \\\\\n\\cov{\\RV{\\x_2}, \\RV{\\x_1}} & \\ldots & \\ldots & \\cov{\\RV{\\x_2}, \\RV{\\x_P}} \\\\\n\\vdots & & & \\vdots \\\\\n\\cov{\\RV{\\x_P}, \\RV{\\x_1}} & \\ldots & \\ldots & \\var{\\RV{\\x_P}} \\\\\n\\end{pmatrix}.\n\\]\nFor these expressions to exist, it suffices for \\(\\expect{\\RV{\\x}_p^2} &lt; \\infty\\) for all \\(p \\in \\{1,\\ldots,P\\}\\).\nWe will at times talk about the expectation of a random matrix, \\(\\RV{\\X}\\), which is simply the matrix of expectations. The notation for covariances of course doesn’t make sense for matrices, but it won’t be needed. (In fact, in cases where the covariance of a random matrix is needed in statistics, the matrix is typically stacked into a vector first.)"
  },
  {
    "objectID": "lectures/Lecture8.html#the-law-of-large-numbers-for-vectors",
    "href": "lectures/Lecture8.html#the-law-of-large-numbers-for-vectors",
    "title": "Vector and matrix-valued statistics and limit theorems.",
    "section": "The law of large numbers for vectors",
    "text": "The law of large numbers for vectors\nThe law of large numbers is particularly simple for vectors — as long as the dimension stays fixed as \\(N \\rightarrow \\infty\\), you can simply apply the LLN to each component separately. Suppose you’re given a sequence of vector-valued random variables, \\(\\RV{\\xv}_n \\in \\rdom{P}\\). Write \\(\\expect{\\RV{\\xv}_n} = \\muv_n\\), and \\(\\var{\\RV{\\xv}_{np}} = \\v_{np}\\) for each \\(p \\in \\{1,\\ldots,P\\}\\). Assume that \\(\\max_{n,p} \\v_{np} &lt; \\infty\\), and that \\(\\muv_n \\rightarrow \\overline{\\muv}\\).\n\n\n\n\n\n\nNote to future instructors\n\n\n\nAs with the univariate LLN, we really need \\(\\lim_{N\\rightarrow\\infty} \\max_{n=1,\\ldots,N, p} \\frac{1}{N} \\v_{np} = 0\\), which is more convenient when we actually use this for the fixed regressor setting, but which complicates the exhibition here.\n\n\nThen we can apply the LLN to each component, getting\n\\[\n\\overline{\\RV{\\xv}} :=\n\\meann \\RV{\\xv}_n \\rightarrow \\overline{\\muv}\n\\quad\\textrm{as }N\\rightarrow \\infty.\n\\]\nYou might be worried that we’re combining probabilistic arguments, even though the entries of \\(\\xv_n\\) might not be independent.\n(If you are worried about that, wonderful!) Since the dimension is fixed, note that we can write\n\\[\n\\prob{\\abs{\\overline{\\RV{\\xv}}_p - \\overline{\\muv}_p} &lt; \\varepsilon \\textrm{ for all }p} =\n\\prob{\\abs{\\overline{\\RV{\\xv}}_1 - \\overline{\\muv}_1} &lt; \\varepsilon \\ldots\\textrm{ and }\\ldots\n  \\abs{\\overline{\\RV{\\xv}}_P - \\overline{\\muv}_P} &lt; \\varepsilon\n} \\le\n\\sum_{p=1}^P\n  \\prob{\\abs{\\overline{\\RV{\\xv}}_p - \\overline{\\muv}_p} &lt; \\varepsilon}\n  \\rightarrow 0,\n\\]\nsince each entry in the sum goes to zero."
  },
  {
    "objectID": "lectures/Lecture8.html#extensions",
    "href": "lectures/Lecture8.html#extensions",
    "title": "Vector and matrix-valued statistics and limit theorems.",
    "section": "Extensions",
    "text": "Extensions\nSince we see that the shape of the vector doesn’t matter, we can also apply the LLN to matrices. For example, if \\(\\RV{\\X}_n\\) is a sequence of random matrices, with \\(\\expect{\\RV{\\X}_n} = \\A\\), then\n\\[\n\\meann \\RV{\\X}_n \\rightarrow \\A.\n\\]\nWe will also use (without proof) a theorem called the continuous mapping theorem, which says that, for a continous function \\(f(\\cdot)\\), then\n\\[\nf\\left(\\meann \\RV{\\xv}_n\\right) \\rightarrow f(\\overline{\\mu}).\n\\]\nNote that the preceding statment is different than saying\n\\[\n\\meann  f\\left( RV{\\xv}_n \\right) \\rightarrow \\expect{f\\left( RV{\\xv}_n \\right)},\n\\]\nwhich may also be true, but which applies the LLN to the random variables \\(f\\left( RV{\\xv}_n \\right)\\)."
  },
  {
    "objectID": "lectures/Lecture8.html#the-central-limit-theorem-for-vectors",
    "href": "lectures/Lecture8.html#the-central-limit-theorem-for-vectors",
    "title": "Vector and matrix-valued statistics and limit theorems.",
    "section": "The central limit theorem for vectors",
    "text": "The central limit theorem for vectors\nWe might hope that we can apply the CLT componentwise just as we did for the LLN, but we are not so lucky. It is true that, assuming (as before) that \\(\\meann \\v_{np} \\rightarrow \\overline{v}_p\\) for each \\(p\\), that\n\\[\n\\sqrt{N} (\\overline{\\RV{\\xv}}_p - \\overline{\\mu}_p) \\rightarrow\n  \\gauss{0, \\overline{v}_p}.\n\\]\nHowever, this does not tell us about the joint behavior of the random variables. Here’s a simple example that illustrates the problem. Consider two settings, based on IID standard normal scalar variables \\(\\RV{u}_n\\) and \\(\\RV{v}_n\\).\n\nSetting one\nTake\n\\[\\RV{\\xv}_n =\n\\begin{pmatrix}\n\\RV{u}_n\\\\\n\\RV{v}_n\n\\end{pmatrix}.\n\\]\nWe know that \\(\\frac{1}{\\sqrt{N}} \\RV{\\xv}_n\\) is exactly multivariate normal with mean \\(\\zerov\\) and covariance matrix \\(\\id{}\\) for all \\(N\\). So, a fortiori,\n\\[\n\\frac{1}{\\sqrt{N}} \\RV{\\xv}_n \\rightarrow \\gauss{\\zerov, \\id{}}.\n\\]\n\n\nSetting two\nTake\n\\[\\RV{\\yv}_n =\n\\begin{pmatrix}\n\\RV{u}_n\\\\\n\\RV{u}_n\n\\end{pmatrix}.\n\\]\nWe know that \\(\\frac{1}{\\sqrt{N}} \\RV{\\yv}_n\\) is exactly multivariate normal with mean \\(\\zerov\\) and covariance matrix \\(\\onev \\onev^\\trans\\) for all \\(N\\).\nSo, a fortiori,\n\\[\n\\frac{1}{\\sqrt{N}} \\RV{\\yv}_n \\rightarrow \\gauss{\\zerov, \\onev \\onev^\\trans}.\n\\]\nFor both \\(\\RV{\\xv}\\) and \\(\\RV{\\yv}\\), each component converges to a standard normal random variable. But for \\(\\RV{\\xv}\\) the two components were independent, and for \\(\\RV{\\yv}\\) they were perfectly dependent. The behavior of the marginals cannot tell you about the joint behavior.\nConsequently, we have to consider the behavior of the whole vector. In particular, write\n\\[\n\\Sigmam_n := \\cov{\\RV{\\xv}_n}\n\\]\nand assume that\n\\[\n\\meann \\Sigmam_n \\rightarrow \\overline{\\Sigmam}\n\\]\nfor each entry of the matrix, where \\(\\overline{\\Sigmam}\\) is element-wise finite. (Note that this requires the average of each entry of the diagonal to to converge!) Then\n\\[\n\\frac{1}{\\sqrt{N}} \\left( \\RV{\\xv}_n - \\expect{\\RV{\\xv}_n} \\right)\n\\rightarrow \\RV{\\zv} \\quad\\textrm{ where }\n\\RV{\\zv} \\sim \\gauss{\\zerov, \\overline{\\Sigmam}}.\n\\]"
  },
  {
    "objectID": "lectures/Lecture8.html#extensions-1",
    "href": "lectures/Lecture8.html#extensions-1",
    "title": "Vector and matrix-valued statistics and limit theorems.",
    "section": "Extensions",
    "text": "Extensions\nFinally, we note that the continuous mapping theorem applies to the CLT as well. That is, if \\(f(\\cdot)\\) is continuous, then\n\\[\nf\\left( \\frac{1}{\\sqrt{N}} \\left( \\RV{\\xv}_n - \\expect{\\RV{\\xv}_n} \\right) \\right)\n\\rightarrow f\\left( \\RV{\\zv} \\right) \\quad\\textrm{ where }\n\\RV{\\zv} \\sim \\gauss{\\zerov, \\overline{\\Sigmam}}.\n\\]"
  },
  {
    "objectID": "lectures/lectures.html",
    "href": "lectures/lectures.html",
    "title": "Lectures and Labs",
    "section": "",
    "text": "Lecture Jan 16th:\n\nClass organization\n\nLab Jan 17th:\n\nStyle problem\n\nLecture Jan 18th:\n\nDifferent kinds of questions\nNote on linear and affine functions\n\n\n\n\nLecture Jan 23rd:\n\nMultilinear regression as minimization\n\nLab Jan 17th:\n\nLinear algebra in R\n\nLecture Jan 25th:\n\nMultilinear regression as projection\n\n\n\n\nLecture Jan 29th:\n\nQuiz 1\nAlternative ways to draw lines through points\n\nLab Jan 30th:\n\nHomework 1 review\n\nLecture Feb 1st:\n\nTransformations of variables\n\n\n\n\nLecture Feb 6th:\n\nUnivariate statistics and limit theorems.\n\nLab Feb 7th:\n\nHomework consultation\n\nLecture Feb 8th:\n\nVector and matrix-valued statistics and limit theorems\n\n\n\n\nLecture Feb 13th:\n\nEstimating prediction variance.\n\nLab Feb 14th:\n\nHomework 2 review\n\nLecture Feb 15th:\n\nSimulations and the law of large numbers.\n\n\n\n\nLecture Feb 20th:\n\nEstimating training data variability effect on prediction."
  },
  {
    "objectID": "lectures/Lecture1_examples.html",
    "href": "lectures/Lecture1_examples.html",
    "title": "Three example datasets for linear modeling",
    "section": "",
    "text": "In Lecture XXI of Wittgenstein’s “Lectures on the Foundations of Mathematics” we find this diagram and quote:\nIn the same passage, he goes on to say,\nWhen we run a regression, we must have a point. Otherwise we are just looking at goose entrails.\nlibrary(tidyverse)\nlibrary(gridExtra)\nlibrary(car)\n\noptions(repr.plot.width = 15, repr.plot.height = 8, repr.plot.res = 300)\n\n── Attaching core tidyverse packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: ‘gridExtra’\n\n\nThe following object is masked from ‘package:dplyr’:\n\n    combine\n\n\nLoading required package: carData\n\n\nAttaching package: ‘car’\n\n\nThe following object is masked from ‘package:dplyr’:\n\n    recode\n\n\nThe following object is masked from ‘package:purrr’:\n\n    some"
  },
  {
    "objectID": "lectures/Lecture1_examples.html#motivation",
    "href": "lectures/Lecture1_examples.html#motivation",
    "title": "Three example datasets for linear modeling",
    "section": "Motivation",
    "text": "Motivation\nMeasuring bodyfat precisely is hard, and proxies are very useful. Can we predict the outcome of an expensive, inconvenient procedure using only easy-to-gather measurements?\n\n\n\nHydrostatic weighing\n\n\nImage from https://www.topendsports.com/testing/tests/underwater.htm\n\nbodyfat_df &lt;- read.csv(\"datasets/bodyfat.csv\")\nhead(bodyfat_df)\nnrow(bodyfat_df)\n\n\nA data.frame: 6 × 15\n\n\n\nDensity\nbodyfat\nAge\nWeight\nHeight\nNeck\nChest\nAbdomen\nHip\nThigh\nKnee\nAnkle\nBiceps\nForearm\nWrist\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1.0708\n12.3\n23\n154.25\n67.75\n36.2\n93.1\n85.2\n94.5\n59.0\n37.3\n21.9\n32.0\n27.4\n17.1\n\n\n2\n1.0853\n6.1\n22\n173.25\n72.25\n38.5\n93.6\n83.0\n98.7\n58.7\n37.3\n23.4\n30.5\n28.9\n18.2\n\n\n3\n1.0414\n25.3\n22\n154.00\n66.25\n34.0\n95.8\n87.9\n99.2\n59.6\n38.9\n24.0\n28.8\n25.2\n16.6\n\n\n4\n1.0751\n10.4\n26\n184.75\n72.25\n37.4\n101.8\n86.4\n101.2\n60.1\n37.3\n22.8\n32.4\n29.4\n18.2\n\n\n5\n1.0340\n28.7\n24\n184.25\n71.25\n34.4\n97.3\n100.0\n101.9\n63.2\n42.2\n24.0\n32.2\n27.7\n17.7\n\n\n6\n1.0502\n20.9\n24\n210.25\n74.75\n39.0\n104.5\n94.4\n107.8\n66.0\n42.0\n25.6\n35.7\n30.6\n18.8\n\n\n\n\n\n252\n\n\n\nvars &lt;- c(\"Weight\", \"Height\", \"Neck\", \"Chest\", \"Abdomen\", \"Hip\", \n          \"Thigh\", \"Knee\", \"Ankle\", \"Biceps\", \"Forearm\", \"Wrist\")\nstopifnot(all(vars %in% names(bodyfat_df)))\n\ngrid.arrange(\n    ggplot(bodyfat_df) + geom_point(aes(x=Abdomen, y=bodyfat)),\n    ggplot(bodyfat_df) + geom_point(aes(x=Height, y=bodyfat)),\n    ggplot(bodyfat_df) + geom_point(aes(x=Weight, y=bodyfat)),\n    ncol=3)\n\n\n\n\n\nregressors &lt;- paste(vars, collapse=\" + \")\nreg_form &lt;- formula(paste0(\"bodyfat ~ 1 + \", regressors))\nreg &lt;- lm(reg_form, bodyfat_df)\nsummary(reg)\n\nggplot() +\n    geom_point(aes(x=bodyfat_df$bodyfat, y=reg$fitted.values)) +\n    geom_abline(aes(slope=1, intercept=0)) +\n    xlab(\"Actual bodyfat\") + ylab(\"Predicted bodyfat\")\n\n\nCall:\nlm(formula = reg_form, data = bodyfat_df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10.4341  -3.0551  -0.0158   3.1951   9.7682 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -19.54803   17.43111  -1.121   0.2632    \nWeight       -0.10974    0.05266  -2.084   0.0382 *  \nHeight       -0.09410    0.09569  -0.983   0.3264    \nNeck         -0.42995    0.23280  -1.847   0.0660 .  \nChest        -0.01728    0.09964  -0.173   0.8625    \nAbdomen       1.02953    0.07761  13.266   &lt;2e-16 ***\nHip          -0.22995    0.14626  -1.572   0.1172    \nThigh         0.13476    0.13510   0.997   0.3195    \nKnee          0.13187    0.23554   0.560   0.5761    \nAnkle         0.12974    0.22150   0.586   0.5586    \nBiceps        0.20538    0.17163   1.197   0.2326    \nForearm       0.38964    0.19756   1.972   0.0497 *  \nWrist        -1.27227    0.50602  -2.514   0.0126 *  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 4.329 on 239 degrees of freedom\nMultiple R-squared:  0.7452,    Adjusted R-squared:  0.7324 \nF-statistic: 58.24 on 12 and 239 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "lectures/Lecture2_examples.html",
    "href": "lectures/Lecture2_examples.html",
    "title": "Three example datasets for linear modeling",
    "section": "",
    "text": "In Lecture XXI of Wittgenstein’s “Lectures on the Foundations of Mathematics” we find this diagram and quote:\nIn the same passage, he goes on to say,\nWhen we run a regression, we must have a point. Otherwise we are just looking at goose entrails.\nlibrary(tidyverse)\nlibrary(gridExtra)\nlibrary(car)\n\noptions(repr.plot.width = 15, repr.plot.height = 8, repr.plot.res = 300)\n\n── Attaching core tidyverse packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: ‘gridExtra’\n\n\nThe following object is masked from ‘package:dplyr’:\n\n    combine\n\n\nLoading required package: carData\n\n\nAttaching package: ‘car’\n\n\nThe following object is masked from ‘package:dplyr’:\n\n    recode\n\n\nThe following object is masked from ‘package:purrr’:\n\n    some"
  },
  {
    "objectID": "lectures/Lecture2_examples.html#motivation",
    "href": "lectures/Lecture2_examples.html#motivation",
    "title": "Three example datasets for linear modeling",
    "section": "Motivation",
    "text": "Motivation\nMeasuring bodyfat precisely is hard, and proxies are very useful. Can we predict the outcome of an expensive, inconvenient procedure using only easy-to-gather measurements?\n\n\n\nHydrostatic weighing\n\n\nImage from https://www.topendsports.com/testing/tests/underwater.htm\n\nbodyfat_df &lt;- read.csv(\"datasets/bodyfat.csv\")\nhead(bodyfat_df)\nnrow(bodyfat_df)\n\n\nA data.frame: 6 × 15\n\n\n\nDensity\nbodyfat\nAge\nWeight\nHeight\nNeck\nChest\nAbdomen\nHip\nThigh\nKnee\nAnkle\nBiceps\nForearm\nWrist\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1.0708\n12.3\n23\n154.25\n67.75\n36.2\n93.1\n85.2\n94.5\n59.0\n37.3\n21.9\n32.0\n27.4\n17.1\n\n\n2\n1.0853\n6.1\n22\n173.25\n72.25\n38.5\n93.6\n83.0\n98.7\n58.7\n37.3\n23.4\n30.5\n28.9\n18.2\n\n\n3\n1.0414\n25.3\n22\n154.00\n66.25\n34.0\n95.8\n87.9\n99.2\n59.6\n38.9\n24.0\n28.8\n25.2\n16.6\n\n\n4\n1.0751\n10.4\n26\n184.75\n72.25\n37.4\n101.8\n86.4\n101.2\n60.1\n37.3\n22.8\n32.4\n29.4\n18.2\n\n\n5\n1.0340\n28.7\n24\n184.25\n71.25\n34.4\n97.3\n100.0\n101.9\n63.2\n42.2\n24.0\n32.2\n27.7\n17.7\n\n\n6\n1.0502\n20.9\n24\n210.25\n74.75\n39.0\n104.5\n94.4\n107.8\n66.0\n42.0\n25.6\n35.7\n30.6\n18.8\n\n\n\n\n\n252\n\n\n\nvars &lt;- c(\"Weight\", \"Height\", \"Neck\", \"Chest\", \"Abdomen\", \"Hip\", \n          \"Thigh\", \"Knee\", \"Ankle\", \"Biceps\", \"Forearm\", \"Wrist\")\nstopifnot(all(vars %in% names(bodyfat_df)))\n\ngrid.arrange(\n    ggplot(bodyfat_df) + geom_point(aes(x=Abdomen, y=bodyfat)),\n    ggplot(bodyfat_df) + geom_point(aes(x=Height, y=bodyfat)),\n    ggplot(bodyfat_df) + geom_point(aes(x=Weight, y=bodyfat)),\n    ncol=3)\n\n\n\n\n\nregressors &lt;- paste(vars, collapse=\" + \")\nreg_form &lt;- formula(paste0(\"bodyfat ~ 1 + \", regressors))\nreg &lt;- lm(reg_form, bodyfat_df)\nsummary(reg)\n\nggplot() +\n    geom_point(aes(x=bodyfat_df$bodyfat, y=reg$fitted.values)) +\n    geom_abline(aes(slope=1, intercept=0)) +\n    xlab(\"Actual bodyfat\") + ylab(\"Predicted bodyfat\")\n\n\nCall:\nlm(formula = reg_form, data = bodyfat_df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10.4341  -3.0551  -0.0158   3.1951   9.7682 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -19.54803   17.43111  -1.121   0.2632    \nWeight       -0.10974    0.05266  -2.084   0.0382 *  \nHeight       -0.09410    0.09569  -0.983   0.3264    \nNeck         -0.42995    0.23280  -1.847   0.0660 .  \nChest        -0.01728    0.09964  -0.173   0.8625    \nAbdomen       1.02953    0.07761  13.266   &lt;2e-16 ***\nHip          -0.22995    0.14626  -1.572   0.1172    \nThigh         0.13476    0.13510   0.997   0.3195    \nKnee          0.13187    0.23554   0.560   0.5761    \nAnkle         0.12974    0.22150   0.586   0.5586    \nBiceps        0.20538    0.17163   1.197   0.2326    \nForearm       0.38964    0.19756   1.972   0.0497 *  \nWrist        -1.27227    0.50602  -2.514   0.0126 *  \n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 4.329 on 239 degrees of freedom\nMultiple R-squared:  0.7452,    Adjusted R-squared:  0.7324 \nF-statistic: 58.24 on 12 and 239 DF,  p-value: &lt; 2.2e-16"
  }
]